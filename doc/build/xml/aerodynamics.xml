<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.12 -->
<document source="E:\Dropbox\Classes\Research\Hephaestus\V_021\AeroComBAT-Project\AeroComBAT-Project\doc\source\aerodynamics.rst">
    <section ids="module-AeroComBAT.Aerodynamics aerodynamics-module" names="aerodynamics\ module">
        <title>Aerodynamics Module</title>
        <index entries="['single',\ u'AeroComBAT.Aerodynamics\ (module)',\ u'module-AeroComBAT.Aerodynamics',\ '']"></index>
        <paragraph>This module contains a library of classes devoted to modeling aircraft parts.</paragraph>
        <paragraph>The main purpose of this library is to model various types of aircraft parts.
Currently only wing objects are suported, however in the future it is possible
that fuselages as well as other parts will be added.</paragraph>
        <field_list>
            <field>
                <field_name>SUMARRY OF THE METHODS</field_name>
                <field_body>
                </field_body>
            </field>
        </field_list>
        <bullet_list bullet="-">
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><title_reference>K</title_reference>: The kernel function used in the doublet-lattice method to relate</term>
                        <definition>
                            <paragraph>downwashes to panel pressures.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><title_reference>calcAIC</title_reference>: Provided several vectors of numbers as well as a reduced frequency</term>
                        <definition>
                            <paragraph>and mach number, this method calculates a matrix of AIC's using doublet-
lattice method elementary solutions. This method is used by the FEM class
flutterAnalysis method.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
        </bullet_list>
        <field_list>
            <field>
                <field_name>SUMARRY OF THE CLASSES</field_name>
                <field_body>
                </field_body>
            </field>
        </field_list>
        <bullet_list bullet="-">
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><title_reference>Airfoil</title_reference>: Primarily used for the generation of structural cross-sectional</term>
                        <definition>
                            <paragraph>meshes, this class represent an airfoil. This class could be expanded in
future to use simple 2D panel methods for an airfoil of arbitrary shape.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><title_reference>CQUADA</title_reference>: This class creates quadrilateral panels intended to be used for</term>
                        <definition>
                            <paragraph>potential flow panel methods. Currently it is used for the unsteady
doublet-lattice panels.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
            <list_item>
                <paragraph><title_reference>CAERO1</title_reference>: This class is used to generate a lattice of CQUADA panels.</paragraph>
            </list_item>
        </bullet_list>
        <section ids="doublet-lattice-kernel-function" names="doublet-lattice\ kernel\ function">
            <title>DOUBLET-LATTICE KERNEL FUNCTION</title>
            <index entries="['single',\ u'K()\ (in\ module\ AeroComBAT.Aerodynamics)',\ u'AeroComBAT.Aerodynamics.K',\ '']"></index>
            <desc desctype="function" domain="py" noindex="False" objtype="function">
                <desc_signature class="" first="False" fullname="K" ids="AeroComBAT.Aerodynamics.K" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.K"><desc_addname>AeroComBAT.Aerodynamics.</desc_addname><desc_name>K</desc_name><desc_parameterlist></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Evaluates the doublet-lattice kernel function.</paragraph>
                    <paragraph>Provided several geometric parameters about the sending and recieving
panels, this method evaluates the kernel function which relates the
pressure on one panel to the downwash induced at another panel.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Args</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>Xr (1x3 np.array[float])</title_reference>: The location of the recieving point.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>Xs (1x3 np.array[float])</title_reference>: The location of the sending point.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>gamma_r (1x3 np.array[float])</title_reference>: The dihedral of the panel corresponding</term>
                                    <definition>
                                        <paragraph>to the recieving point.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>gamma_s (1x3 np.array[float])</title_reference>: The dihedral of the panel corresponding</term>
                                    <definition>
                                        <paragraph>to the sending point.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>M (float)</title_reference>: The mach number</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>br (float)</title_reference>: The reference semi-chord</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>kr (float)</title_reference>: The reduced frequency</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>r1 (float)</title_reference>: The scalar distance between the sending point and the</term>
                                    <definition>
                                        <paragraph>recieving point.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Kbar (complex128)</title_reference>: The evaluation of the unsteady kernel function which</term>
                                    <definition>
                                        <paragraph>is complex in nature.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                </desc_content>
            </desc>
        </section>
        <section ids="doublet-lattice-aic-method" names="doublet-lattice\ aic\ method">
            <title>DOUBLET-LATTICE AIC METHOD</title>
            <index entries="['single',\ u'calcAIC()\ (in\ module\ AeroComBAT.Aerodynamics)',\ u'AeroComBAT.Aerodynamics.calcAIC',\ '']"></index>
            <desc desctype="function" domain="py" noindex="False" objtype="function">
                <desc_signature class="" first="False" fullname="calcAIC" ids="AeroComBAT.Aerodynamics.calcAIC" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.calcAIC"><desc_addname>AeroComBAT.Aerodynamics.</desc_addname><desc_name>calcAIC</desc_name><desc_parameterlist></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Calculate the doublet-lattice AIC's.</paragraph>
                    <paragraph>Provided the geometry of all of the doublet-lattice panels, this method
calculates the AIC matrix.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Args</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>M (float)</title_reference>: The mach number.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>kr (float)</title_reference>: The reduced frequency.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>br (float)</title_reference>: The reference semi-chord.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>delta_x_vec (1xN array[float]</title_reference>: An array of chord length of the panels.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>sweep_vec (1xN array[float])</title_reference>: An array of sweep angles of the panels.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>l_vec (1xN array[float])</title_reference>: An array of average doublet line lengths of</term>
                                    <definition>
                                        <paragraph>the panels.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>dihedral_vec (1xN array[float])</title_reference>: An array of dihedral angles of the</term>
                                    <definition>
                                        <paragraph>panels.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Xr_vec (Nx3 np.array[float])</title_reference>: A matrix of recieving points, where a row</term>
                                    <definition>
                                        <paragraph>are the 3D coordinates of the point.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Xi_vec (Nx3 np.array[float])</title_reference>: A matrix of inboard sending points, where</term>
                                    <definition>
                                        <paragraph>a row are the 3D coordinates of the point.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Xc_vec (Nx3 np.array[float])</title_reference>: A matrix of center sending points, where</term>
                                    <definition>
                                        <paragraph>a row are the 3D coordinates of the point.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Xo_vec (Nx3 np.array[float])</title_reference>: A matrix of outboard sending points,</term>
                                    <definition>
                                        <paragraph>where a row are the 3D coordinates of the point.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>symxz (bool)</title_reference>: A boolean operater intended to determine whether or not</term>
                                    <definition>
                                        <paragraph>a reflection of the panels should be considered over the xz-plane.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>D (NPANxNPAN np.array[complex128])</title_reference>: The matrix which relates pressures</term>
                                    <definition>
                                        <paragraph>over panels to induced velocities over those panels. In more simple
terms, this is the inverse of the desired AIC matrix.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                </desc_content>
            </desc>
        </section>
        <section ids="airfoil" names="airfoil">
            <title>AIRFOIL</title>
            <index entries="['single',\ u'Airfoil\ (class\ in\ AeroComBAT.Aerodynamics)',\ u'AeroComBAT.Aerodynamics.Airfoil',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="Airfoil" ids="AeroComBAT.Aerodynamics.Airfoil" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.Airfoil"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Aerodynamics.</desc_addname><desc_name>Airfoil</desc_name><desc_parameterlist><desc_parameter>c</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Creates an airfoil object.</paragraph>
                    <paragraph>This class creates an airfoil object. Currently this class is primarily
used in the generation of cross-sectional meshes. Currently only NACA 4
series arfoil and rectangular boxes are supported.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>c (float)</title_reference>: The chord length of the airfoil.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>t (float)</title_reference>: The max percent thickness of the airfoil.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>p (float)</title_reference>: The location of the max camber of the airfoil, in 10%</term>
                                    <definition>
                                        <paragraph>increments.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>m (float)</title_reference>: The max camber of the airfoil as a percent of the chord.</paragraph>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>points</title_reference>: Generates the x and y upper and lower coordinates of the</term>
                                    <definition>
                                        <paragraph>airfoil.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <index entries="['single',\ u'__init__()\ (AeroComBAT.Aerodynamics.Airfoil\ method)',\ u'AeroComBAT.Aerodynamics.Airfoil.__init__',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Airfoil" first="False" fullname="Airfoil.__init__" ids="AeroComBAT.Aerodynamics.Airfoil.__init__" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.Airfoil.__init__"><desc_name>__init__</desc_name><desc_parameterlist><desc_parameter>c</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Airfoil object constructor.</paragraph>
                            <paragraph>Initializes the airfoil object.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>c (float)</title_reference>: The chord length of the airfoil.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>name (str)</title_reference>: The name of the airfoil section. This can either be </term>
                                            <definition>
                                                <paragraph>a 'NACAXXXX' airfoil or 'box' which signifies the OML is a
rectangle.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'points()\ (AeroComBAT.Aerodynamics.Airfoil\ method)',\ u'AeroComBAT.Aerodynamics.Airfoil.points',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Airfoil" first="False" fullname="Airfoil.points" ids="AeroComBAT.Aerodynamics.Airfoil.points" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.Airfoil.points"><desc_name>points</desc_name><desc_parameterlist><desc_parameter>x</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Generates upper and lower airfoil curves.</paragraph>
                            <paragraph>This method will generate the x and y coordinates for the upper and
lower airfoil surfaces provided the non-dimensional array of points x.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>x (1xN np.array[float])</title_reference>: An array of floats for which the upper and</term>
                                            <definition>
                                                <paragraph>lower airfoil curves should be generated.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>xu (1xN np.array[float])</title_reference>: The upper x-coordinates of the curve.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>yu (1xN np.array[float])</title_reference>: The upper y-coordinates of the curve.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>xl (1xN np.array[float])</title_reference>: The lower x-coordinates of the curve.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>yl (1xN np.array[float])</title_reference>: The lower y-coordinates of the curve.</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printSummary()\ (AeroComBAT.Aerodynamics.Airfoil\ method)',\ u'AeroComBAT.Aerodynamics.Airfoil.printSummary',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Airfoil" first="False" fullname="Airfoil.printSummary" ids="AeroComBAT.Aerodynamics.Airfoil.printSummary" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.Airfoil.printSummary"><desc_name>printSummary</desc_name><desc_parameterlist><desc_parameter>x</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>A method for printing a summary of the airfoil object.</paragraph>
                            <paragraph>Prints the airfoil chord length as well as airfoil name.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>(str): Prints the tabulated chord length and name of the airfoil</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="cquada" names="cquada">
            <title>CQUADA</title>
            <index entries="['single',\ u'CQUADA\ (class\ in\ AeroComBAT.Aerodynamics)',\ u'AeroComBAT.Aerodynamics.CQUADA',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="CQUADA" ids="AeroComBAT.Aerodynamics.CQUADA" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CQUADA"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Aerodynamics.</desc_addname><desc_name>CQUADA</desc_name><desc_parameterlist><desc_parameter>PANID</desc_parameter><desc_parameter>xs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Represents a CQUADA aerodynamic panel.</paragraph>
                    <paragraph>This CQUADA panel object is used for the unsteady aerodynamic doublet-
lattice method currently, although it could likely easily be extended to
support the vortex lattice method as well. The geometry of a generic panel
can be seen in the figure below.</paragraph>
                    <image align="center" candidates="{'*': u'images/DoubletLatticePanel.png'}" uri="images/DoubletLatticePanel.png">
                    </image>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>type (str)</title_reference>: The type of object.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>PANID (int)</title_reference>: The integer ID linked with the panel.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>xs (1x4 np.array[float])</title_reference>: The x coordinates of the panel.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>ys (1x4 np.array[float])</title_reference>: The y coordinates of the panel.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>zs (1x4 np.array[float])</title_reference>: The z coordinates of the panel.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>DOF (dict[NID,factor])</title_reference>: This dictionary is for connecting the movement</term>
                                    <definition>
                                        <paragraph>of the panel to the movement of an associated structure. Since a
panel's control point could be between two nodes (in the middle of an
element), the position of the panel can interpolated using a finite
element formulation. The NID's link the movement of the panel to the
movement of a corresponding node. The factor allows for a finite
element interpolation.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>Area (float)</title_reference>: The area of the panel.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>sweep (float)</title_reference>: The average sweep of the panel's doublet line.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>delta_x (float)</title_reference>: The average chord line of the panel.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>l (float)</title_reference>: The length of the panel's doublet line.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>dihedral (float)</title_reference>: The dihedral of the panel.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>Xr (1x3 np.array[float])</title_reference>: The coordiantes of the panel's sending point.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Xi (1x3 np.array[float])</title_reference>: The coordinates of the panel's inboard</term>
                                    <definition>
                                        <paragraph>sending point.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Xc (1x3 np.array[float])</title_reference>: The coordinates of the panel's center</term>
                                    <definition>
                                        <paragraph>sending point.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Xo (1x3 np.array[float])</title_reference>: The coordinates of the panel's outboard</term>
                                    <definition>
                                        <paragraph>sending point.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>x</title_reference>: Provided the non-dimensional coordinates eta and xi which go from -1</term>
                                    <definition>
                                        <paragraph>to 1, this method returns corresponding the x coordinates.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>y</title_reference>: Provided the non-dimensional coordinates eta and xi which go from -1</term>
                                    <definition>
                                        <paragraph>to 1, this method returns corresponding the y coordinates.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>z</title_reference>: Provided the non-dimensional coordinates eta and xi which go from -1</term>
                                    <definition>
                                        <paragraph>to 1, this method returns corresponding the z coordinates.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>J</title_reference>:Provided the non-dimensional coordinates eta and xi which go from -1</term>
                                    <definition>
                                        <paragraph>to 1, this method returns the jacobian matrix at that point. This
method is primarily used to fascilitate the calculation of the panels
area.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>printSummary</title_reference>: Prints a summary of the panel.</paragraph>
                        </list_item>
                    </bullet_list>
                    <note>
                        <paragraph>The ordering of the xs, ys, and zs arrays should be ordered in a</paragraph>
                    </note>
                    <paragraph>finite element convention. The first point refers to the root trailing edge
point, followed by the tip trailling edge, then the tip leading edge, then
root leading edge.</paragraph>
                    <index entries="['single',\ u'J()\ (AeroComBAT.Aerodynamics.CQUADA\ method)',\ u'AeroComBAT.Aerodynamics.CQUADA.J',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADA" first="False" fullname="CQUADA.J" ids="AeroComBAT.Aerodynamics.CQUADA.J" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CQUADA.J"><desc_name>J</desc_name><desc_parameterlist><desc_parameter>eta</desc_parameter><desc_parameter>xi</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Calculates the jacobian at a point in the element.</paragraph>
                            <paragraph>This method calculates the jacobian at a local point within the panel
provided the master coordinates eta and xi.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>eta (float)</title_reference>: The eta coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>xi (float)</title_reference>: The xi coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>Jmat (3x3 np.array[float])</title_reference>: The stress-resutlant transformation</term>
                                            <definition>
                                                <paragraph>array.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>Xi and eta can both vary between -1 and 1 respectively.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'__init__()\ (AeroComBAT.Aerodynamics.CQUADA\ method)',\ u'AeroComBAT.Aerodynamics.CQUADA.__init__',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADA" first="False" fullname="CQUADA.__init__" ids="AeroComBAT.Aerodynamics.CQUADA.__init__" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CQUADA.__init__"><desc_name>__init__</desc_name><desc_parameterlist><desc_parameter>PANID</desc_parameter><desc_parameter>xs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Initializes the panel.</paragraph>
                            <paragraph>This method initializes the panel, including generating many of the
geometric properties required for the doublet lattice method such as
Xr, Xi, etc.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>PANID (int)</title_reference>: The integer ID associated with the panel.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>xs (1x4 array[1x3 np.array[float]])</title_reference>: The coordinates of the four</term>
                                            <definition>
                                                <paragraph>corner points of the elements.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printSummary()\ (AeroComBAT.Aerodynamics.CQUADA\ method)',\ u'AeroComBAT.Aerodynamics.CQUADA.printSummary',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADA" first="False" fullname="CQUADA.printSummary" ids="AeroComBAT.Aerodynamics.CQUADA.printSummary" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CQUADA.printSummary"><desc_name>printSummary</desc_name><desc_parameterlist></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>A method for printing a summary of the CQUADA panel.</paragraph>
                            <paragraph>Prints out a tabulated information about the panel such as it's panel
ID, and the coordinates of it's four corner points.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>summary (str)</title_reference>: The summary of the CQUADA attributes.</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'x()\ (AeroComBAT.Aerodynamics.CQUADA\ method)',\ u'AeroComBAT.Aerodynamics.CQUADA.x',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADA" first="False" fullname="CQUADA.x" ids="AeroComBAT.Aerodynamics.CQUADA.x" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CQUADA.x"><desc_name>x</desc_name><desc_parameterlist><desc_parameter>eta</desc_parameter><desc_parameter>xi</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Calculate the x-coordinate within the panel.</paragraph>
                            <paragraph>Calculates the x-coordinate on the panel provided the desired master
coordinates eta and xi.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>eta (float)</title_reference>: The eta coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>xi (float)</title_reference>: The xi coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>x (float)</title_reference>: The x-coordinate within the element.</paragraph>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>Xi and eta can both vary between -1 and 1 respectively.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'y()\ (AeroComBAT.Aerodynamics.CQUADA\ method)',\ u'AeroComBAT.Aerodynamics.CQUADA.y',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADA" first="False" fullname="CQUADA.y" ids="AeroComBAT.Aerodynamics.CQUADA.y" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CQUADA.y"><desc_name>y</desc_name><desc_parameterlist><desc_parameter>eta</desc_parameter><desc_parameter>xi</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Calculate the y-coordinate within the panel.</paragraph>
                            <paragraph>Calculates the y-coordinate on the panel provided the desired master
coordinates eta and xi.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>eta (float)</title_reference>: The eta coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>xi (float)</title_reference>: The xi coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>y (float)</title_reference>: The y-coordinate within the element.</paragraph>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>Xi and eta can both vary between -1 and 1 respectively.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'z()\ (AeroComBAT.Aerodynamics.CQUADA\ method)',\ u'AeroComBAT.Aerodynamics.CQUADA.z',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADA" first="False" fullname="CQUADA.z" ids="AeroComBAT.Aerodynamics.CQUADA.z" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CQUADA.z"><desc_name>z</desc_name><desc_parameterlist><desc_parameter>eta</desc_parameter><desc_parameter>xi</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Calculate the z-coordinate within the panel.</paragraph>
                            <paragraph>Calculates the z-coordinate on the panel provided the desired master
coordinates eta and xi.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>eta (float)</title_reference>: The eta coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>xi (float)</title_reference>: The xi coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>z (float)</title_reference>: The z-coordinate within the element.</paragraph>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>Xi and eta can both vary between -1 and 1 respectively.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="caero1" names="caero1">
            <title>CAERO1</title>
            <index entries="['single',\ u'CAERO1\ (class\ in\ AeroComBAT.Aerodynamics)',\ u'AeroComBAT.Aerodynamics.CAERO1',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="CAERO1" ids="AeroComBAT.Aerodynamics.CAERO1" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CAERO1"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Aerodynamics.</desc_addname><desc_name>CAERO1</desc_name><desc_parameterlist><desc_parameter>SID</desc_parameter><desc_parameter>x1</desc_parameter><desc_parameter>x2</desc_parameter><desc_parameter>x3</desc_parameter><desc_parameter>x4</desc_parameter><desc_parameter>nspan</desc_parameter><desc_parameter>nchord</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Represents an aerodynamic surface.</paragraph>
                    <paragraph>This CAERO1 object represents an aerodynamic lifting surface to be modeled
using the doublet-lattice method.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>type (str)</title_reference>: The type of object.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>SID (int)</title_reference>: The integer ID linked with the surface.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>xs (1x4 np.array[float])</title_reference>: The x coordinates of the panel.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>ys (1x4 np.array[float])</title_reference>: The y coordinates of the panel.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>zs (1x4 np.array[float])</title_reference>: The z coordinates of the panel.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>mesh ((NPAN+1)x(NPAN+1) np.array[int])</title_reference>: The panel ID's in the relative</term>
                                    <definition>
                                        <paragraph>positions of their corresponding panels.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>xmesh ((NPAN+1)x(NPAN+1) np.array[float])</title_reference>: The x-coordinates of the</term>
                                    <definition>
                                        <paragraph>lifting surface nodes.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>ymesh ((NPAN+1)x(NPAN+1) np.array[float])</title_reference>: The y-coordinates of the</term>
                                    <definition>
                                        <paragraph>lifting surface nodes.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>zmesh ((NPAN+1)x(NPAN+1) np.array[float])</title_reference>: The z-coordinates of the</term>
                                    <definition>
                                        <paragraph>lifting surface nodes.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>CQUADAs (dict[PANID, CQUADA])</title_reference>: A dictionary mapping panel ID's to</term>
                                    <definition>
                                        <paragraph>CQUADA panel objects.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>x</title_reference>: Provided the non-dimensional coordinates eta and xi which go from -1</term>
                                    <definition>
                                        <paragraph>to 1, this method returns corresponding the x coordinates.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>y</title_reference>: Provided the non-dimensional coordinates eta and xi which go from -1</term>
                                    <definition>
                                        <paragraph>to 1, this method returns corresponding the y coordinates.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>z</title_reference>: Provided the non-dimensional coordinates eta and xi which go from -1</term>
                                    <definition>
                                        <paragraph>to 1, this method returns corresponding the z coordinates.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>plotLiftingSurface</title_reference>: Plots the lifting surface in 3D space. Useful for</term>
                                    <definition>
                                        <paragraph>debugging purposes.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>printSummary</title_reference>: Prints a summary of the panel.</paragraph>
                        </list_item>
                    </bullet_list>
                    <note>
                        <paragraph>The ordering of the xs, ys, and zs arrays should be ordered in a</paragraph>
                    </note>
                    <paragraph>finite element convention. The first point refers to the root leading edge
point, followed by the root trailling edge, then the tip trailing edge,
then tip leading edge.</paragraph>
                    <index entries="['single',\ u'__init__()\ (AeroComBAT.Aerodynamics.CAERO1\ method)',\ u'AeroComBAT.Aerodynamics.CAERO1.__init__',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CAERO1" first="False" fullname="CAERO1.__init__" ids="AeroComBAT.Aerodynamics.CAERO1.__init__" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CAERO1.__init__"><desc_name>__init__</desc_name><desc_parameterlist><desc_parameter>SID</desc_parameter><desc_parameter>x1</desc_parameter><desc_parameter>x2</desc_parameter><desc_parameter>x3</desc_parameter><desc_parameter>x4</desc_parameter><desc_parameter>nspan</desc_parameter><desc_parameter>nchord</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Constructor for the CAERO1 lifting surface object.</paragraph>
                            <paragraph>Provided several geometric parameters, this method initializes and
discretizes a lifting surface using CQUADA panel objects.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>SID (int)</title_reference>: The integer ID for the surface.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>x1 (1x3 np.array[float])</title_reference>: The coordinate of the root leading edge.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>x2 (1x3 np.array[float])</title_reference>: The coordinate of the root trailing edge.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>x3 (1x3 np.array[float])</title_reference>: The coordinate of the tip trailing edge.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>x4 (1x3 np.array[float])</title_reference>: The coordinate of the tip leading edge.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>nspan (int)</title_reference>: The number of panels to run in the spanwise direction.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>nchord (int)</title_reference>: The number of panels to run in the chordwise</term>
                                            <definition>
                                                <paragraph>direction.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'plotLiftingSurface()\ (AeroComBAT.Aerodynamics.CAERO1\ method)',\ u'AeroComBAT.Aerodynamics.CAERO1.plotLiftingSurface',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CAERO1" first="False" fullname="CAERO1.plotLiftingSurface" ids="AeroComBAT.Aerodynamics.CAERO1.plotLiftingSurface" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CAERO1.plotLiftingSurface"><desc_name>plotLiftingSurface</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Plots the lifting surface using the MayaVi environment.</paragraph>
                            <paragraph>This method plots the lifting surface using the MayaVi engine. It is
most useful for debugging models, allowing the user to verify that the
wing they thought they generated is actually what was generated.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>figName (str)</title_reference>: The name of the figure</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>(figure)</title_reference>: MayaVi Figure of the laminate.</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printSummary()\ (AeroComBAT.Aerodynamics.CAERO1\ method)',\ u'AeroComBAT.Aerodynamics.CAERO1.printSummary',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CAERO1" first="False" fullname="CAERO1.printSummary" ids="AeroComBAT.Aerodynamics.CAERO1.printSummary" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CAERO1.printSummary"><desc_name>printSummary</desc_name><desc_parameterlist></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>A method for printing a summary of the CAERO1 element.</paragraph>
                            <paragraph>Prints out the surface ID, as well as the number of chordwise and
spanwise panels.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>summary (str)</title_reference>: A summary of the CAERO1 surface attributes.</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'x()\ (AeroComBAT.Aerodynamics.CAERO1\ method)',\ u'AeroComBAT.Aerodynamics.CAERO1.x',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CAERO1" first="False" fullname="CAERO1.x" ids="AeroComBAT.Aerodynamics.CAERO1.x" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CAERO1.x"><desc_name>x</desc_name><desc_parameterlist><desc_parameter>eta</desc_parameter><desc_parameter>xi</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Calculate the x-coordinate within the lifting surface.</paragraph>
                            <paragraph>Calculates the x-coordinate within the lifting surface provided the
desired master coordinates eta and xi.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>eta (float)</title_reference>: The eta coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>xi (float)</title_reference>: The xi coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>x (float)</title_reference>: The x-coordinate within the element.</paragraph>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>Xi and eta can both vary between -1 and 1 respectively.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'y()\ (AeroComBAT.Aerodynamics.CAERO1\ method)',\ u'AeroComBAT.Aerodynamics.CAERO1.y',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CAERO1" first="False" fullname="CAERO1.y" ids="AeroComBAT.Aerodynamics.CAERO1.y" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CAERO1.y"><desc_name>y</desc_name><desc_parameterlist><desc_parameter>eta</desc_parameter><desc_parameter>xi</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Calculate the y-coordinate within the lifting surface.</paragraph>
                            <paragraph>Calculates the y-coordinate within the lifting surface provided the
desired master coordinates eta and xi.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>eta (float)</title_reference>: The eta coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>xi (float)</title_reference>: The xi coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>y (float)</title_reference>: The y-coordinate within the element.</paragraph>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>Xi and eta can both vary between -1 and 1 respectively.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'z()\ (AeroComBAT.Aerodynamics.CAERO1\ method)',\ u'AeroComBAT.Aerodynamics.CAERO1.z',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CAERO1" first="False" fullname="CAERO1.z" ids="AeroComBAT.Aerodynamics.CAERO1.z" module="AeroComBAT.Aerodynamics" names="AeroComBAT.Aerodynamics.CAERO1.z"><desc_name>z</desc_name><desc_parameterlist><desc_parameter>eta</desc_parameter><desc_parameter>xi</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Calculate the z-coordinate within the lifting surface.</paragraph>
                            <paragraph>Calculates the z-coordinate within the lifting surface provided the
desired master coordinates eta and xi.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>eta (float)</title_reference>: The eta coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>xi (float)</title_reference>: The xi coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>z (float)</title_reference>: The y-coordinate within the element.</paragraph>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>Xi and eta can both vary between -1 and 1 respectively.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
    </section>
</document>
