<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.12 -->
<document source="E:\Dropbox\Classes\Research\Hephaestus\V_021\AeroComBAT-Project\AeroComBAT-Project\doc\source\structures.rst">
    <section ids="module-AeroComBAT.Structures structures-module" names="structures\ module">
        <title>Structures Module</title>
        <index entries="['single',\ u'AeroComBAT.Structures\ (module)',\ u'module-AeroComBAT.Structures',\ '']"></index>
        <paragraph>This module contains a library of classes devoted to structural analysis.</paragraph>
        <paragraph>The primary purpose of this library is to fascilitate the ROM (reduced order
modeling) of structures that can simplified to beams. The real power of this
library comes from it's the XSect class. This class can create and analyze
a cross-section, allowing the user to accurately model a nonhomogeneous
(made of multiple materials) anisotropic (materials that behave anisotropically
such as composites) complex cross-sections.</paragraph>
        <paragraph>It should be noted that classes are ordered by model complexity. The further
down the structures.py library, the more complex the objects, often requiring
multiple of their predecessors. For example, the CQUADX class requires four
node objects and a material object.</paragraph>
        <field_list>
            <field>
                <field_name>SUMARRY OF THE CLASSES</field_name>
                <field_body>
                </field_body>
            </field>
        </field_list>
        <bullet_list bullet="-">
            <list_item>
                <paragraph><title_reference>Node</title_reference>: Creates a node object with 3D position.</paragraph>
            </list_item>
            <list_item>
                <paragraph><title_reference>Material</title_reference>: Creates a material object, generating the 3D constitutive relations.</paragraph>
            </list_item>
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><title_reference>MicroMechanics</title_reference>: Class to fascilitate the calculation of composite stiffnesses</term>
                        <definition>
                            <paragraph>using micro-mechanical models where fibers are long and continuous.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><title_reference>CQUADX</title_reference>: Creates a 2D linear quadrilateral element, mainly used to fascilitate    cross-sectional analysis, this class could be modified in future updates</term>
                        <definition>
                            <paragraph>such that they could also be used to create plate or laminate element
objects as well.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><title_reference>MaterialLib</title_reference>: Creates a material library object meant to hold many material</term>
                        <definition>
                            <paragraph>objects.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
            <list_item>
                <paragraph><title_reference>Ply</title_reference>: Creates ply objects which are used in the building of a laminate object.</paragraph>
            </list_item>
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><title_reference>Laminate</title_reference>: Creates laminate objects which could be used for CLT (classical</term>
                        <definition>
                            <paragraph>lamination theory) analysis as well as to be used in building a beam
cross-section.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><title_reference>XSect</title_reference>: Creates a cross-section object which can be used in the ROM of a beam</term>
                        <definition>
                            <paragraph>with a non-homogeneous anisotropic cross-section. Currently only supports
simple box beam cross-section (i.e., four laminates joined together to form
a box), however outer mold lines can take the shape of airfoil profiles.
See the Airfoil class in AircraftParts.py for more info.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
            <list_item>
                <paragraph><title_reference>TBeam</title_reference>: Creates a single Timoshenko beam object for FEA.</paragraph>
            </list_item>
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><title_reference>SuperBeam</title_reference>: Creates a super beam object. This class is mainly used to automate</term>
                        <definition>
                            <paragraph>the creation of many connected TBeam objects to be used late for FEA.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><title_reference>WingSection</title_reference>: A class which creates and holds many super beams, each of which</term>
                        <definition>
                            <paragraph>could have different cross-sections. It also helps to dimensionalize
plates for simple closed-form composite buckling load aproximations.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
        </bullet_list>
        <note>
            <paragraph>Currently the inclusion of thermal strains are not supported for any
structural model.</paragraph>
        </note>
        <section ids="node" names="node">
            <title>NODE</title>
            <index entries="['single',\ u'Node\ (class\ in\ AeroComBAT.Structures)',\ u'AeroComBAT.Structures.Node',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="Node" ids="AeroComBAT.Structures.Node" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Node"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Structures.</desc_addname><desc_name>Node</desc_name><desc_parameterlist><desc_parameter>NID</desc_parameter><desc_parameter>x</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Creates a node object.</paragraph>
                    <paragraph>Node objects could be used in any finite element implementation.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>NID (int)</title_reference>: The integer identifier given to the object.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>x (Array[float])</title_reference>: An array containing the 3 x-y-z coordinates of the</term>
                                    <definition>
                                        <paragraph>node.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>summary (str)</title_reference>: A string which is a tabulated respresentation and</term>
                                    <definition>
                                        <paragraph>summary of the important attributes of the object.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>printSummary</title_reference>: This method prints out basic information about the node</term>
                                    <definition>
                                        <paragraph>object, such as it's node ID and it's x-y-z coordinates</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <index entries="['single',\ u'__init__()\ (AeroComBAT.Structures.Node\ method)',\ u'AeroComBAT.Structures.Node.__init__',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Node" first="False" fullname="Node.__init__" ids="AeroComBAT.Structures.Node.__init__" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Node.__init__"><desc_name>__init__</desc_name><desc_parameterlist><desc_parameter>NID</desc_parameter><desc_parameter>x</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Initializes the node object.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>nid (int)</title_reference>: The desired integer node ID</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>x (Array[float])</title_reference>: The position of the node in 3D space.</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printSummary()\ (AeroComBAT.Structures.Node\ method)',\ u'AeroComBAT.Structures.Node.printSummary',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Node" first="False" fullname="Node.printSummary" ids="AeroComBAT.Structures.Node.printSummary" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Node.printSummary"><desc_name>printSummary</desc_name><desc_parameterlist></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Prints basic information about the node.</paragraph>
                            <paragraph>The printSummary method prints out basic node attributes in an organized
fashion. This includes the node ID and x-y-z global coordinates.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>A printed table including the node ID and it's coordinates</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="material" names="material">
            <title>MATERIAL</title>
            <index entries="['single',\ u'Material\ (class\ in\ AeroComBAT.Structures)',\ u'AeroComBAT.Structures.Material',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="Material" ids="AeroComBAT.Structures.Material" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Material"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Structures.</desc_addname><desc_name>Material</desc_name><desc_parameterlist><desc_parameter>MID</desc_parameter><desc_parameter>name</desc_parameter><desc_parameter>matType</desc_parameter><desc_parameter>mat_constants</desc_parameter><desc_parameter>mat_t</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>creates a linear elastic material object.</paragraph>
                    <paragraph>This class creates a material object which can be stored within a
material library object. The material can be in general orthotropic.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>name (str)</title_reference>: A name for the material.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>MID (int)</title_reference>: An integer identifier for the material.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>matType (str)</title_reference>: A string expressing what type of material it is.</term>
                                    <definition>
                                        <paragraph>Currently, the supported materials are isotropic, transversely
isotropic, and orthotropic.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>summary (str)</title_reference>: A string which is a tabulated respresentation and</term>
                                    <definition>
                                        <paragraph>summary of the important attributes of the object.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>t (float)</title_reference>: A single float which represents the thickness of a ply if</term>
                                    <definition>
                                        <paragraph>the material is to be used in a composite.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>rho (float)</title_reference>: A single float which represents the density of the</term>
                                    <definition>
                                        <paragraph>materials.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Smat (6x6 numpy Array[float])</title_reference>: A numpy array representing the</term>
                                    <definition>
                                        <paragraph>compliance matrix in the fiber coordinate system.*</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Cmat (6x6 numpy Array[float])</title_reference>: A numpy array representing the</term>
                                    <definition>
                                        <paragraph>stiffness matrix in the fiber coordinate system.*</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>printSummary</title_reference>: This method prints out basic information about the</term>
                                    <definition>
                                        <paragraph>material, including the type, the material constants, material
thickness, as well as the tabulated stiffness or compliance
matricies if requested.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <note>
                        <paragraph>The CQUADX element assumes that the fibers are oriented along
the (1,0,0) in the global coordinate system.</paragraph>
                    </note>
                    <index entries="['single',\ u'__init__()\ (AeroComBAT.Structures.Material\ method)',\ u'AeroComBAT.Structures.Material.__init__',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Material" first="False" fullname="Material.__init__" ids="AeroComBAT.Structures.Material.__init__" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Material.__init__"><desc_name>__init__</desc_name><desc_parameterlist><desc_parameter>MID</desc_parameter><desc_parameter>name</desc_parameter><desc_parameter>matType</desc_parameter><desc_parameter>mat_constants</desc_parameter><desc_parameter>mat_t</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Creates a material object</paragraph>
                            <paragraph>The main purpose of this class is assembling the constitutive
relations. Regardless of the analysis</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>MID (int)</title_reference>: Material ID.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>name (str)</title_reference>: Name of the material.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>matType (str)</title_reference>: The type of the material. Supported material types</term>
                                            <definition>
                                                <paragraph>are "iso", "trans_iso", and "ortho".</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>mat_constants (1xX Array[Float])</title_reference>: The requisite number of material</term>
                                            <definition>
                                                <paragraph>constants required for any structural analysis. Note, this
array includes the material density. For example, an isotropic
material needs 2 elastic material constants, so the total
length of mat_constants would be 3, 2 elastic constants and the
density.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>mat_t (float)</title_reference>: The thickness of 1-ply of the material</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>th (1x3 Array[float])</title_reference>: The angles about which the material can be</term>
                                            <definition>
                                                <paragraph>rotated when it is initialized. In degrees.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>While this class supports material direction rotations, it is more
robust to simply let the CQUADX and Mesher class handle all material
rotations.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printSummary()\ (AeroComBAT.Structures.Material\ method)',\ u'AeroComBAT.Structures.Material.printSummary',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Material" first="False" fullname="Material.printSummary" ids="AeroComBAT.Structures.Material.printSummary" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Material.printSummary"><desc_name>printSummary</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Prints a tabulated summary of the material.</paragraph>
                            <paragraph>This method prints out basic information about the
material, including the type, the material constants, material
thickness, as well as the tabulated stiffness or compliance
matricies if requested.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>compliance (str)</title_reference>: A boolean input to signify if the compliance</term>
                                            <definition>
                                                <paragraph>matrix should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>stiffness (str)</title_reference>: A boolean input to signify if the stiffness matrix</term>
                                            <definition>
                                                <paragraph>should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term>String print out containing the material name, as well as material</term>
                                            <definition>
                                                <paragraph>constants and other defining material attributes. If requested
this includes the material stiffness and compliance matricies.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="cquadx" names="cquadx">
            <title>CQUADX</title>
            <index entries="['single',\ u'CQUADX\ (class\ in\ AeroComBAT.Structures)',\ u'AeroComBAT.Structures.CQUADX',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="CQUADX" ids="AeroComBAT.Structures.CQUADX" module="AeroComBAT.Structures" names="AeroComBAT.Structures.CQUADX"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Structures.</desc_addname><desc_name>CQUADX</desc_name><desc_parameterlist><desc_parameter>EID</desc_parameter><desc_parameter>nodes</desc_parameter><desc_parameter>MID</desc_parameter><desc_parameter>matLib</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Creates a linear, 2D 4 node quadrilateral element object.</paragraph>
                    <paragraph>The main purpose of this class is to assist in the cross-sectional
analysis of a beam, however it COULD be modified to serve as an element for
2D plate or laminate FE analysis.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>type (str)</title_reference>: A string designating it a CQUADX element.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>xsect (bool)</title_reference>: States whether the element is to be used in cross-</term>
                                    <definition>
                                        <paragraph>sectional analysis.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>th (1x3 Array[float])</title_reference>: Array containing the Euler-angles expressing how</term>
                                    <definition>
                                        <paragraph>the element constitutive relations should be rotated from the
material fiber frame to the global CSYS. In degrees.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>EID (int)</title_reference>: An integer identifier for the CQUADX element.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>MID (int)</title_reference>: An integer refrencing the material ID used for the</term>
                                    <definition>
                                        <paragraph>constitutive relations.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>NIDs (1x4 Array[int])</title_reference>: Contains the integer node identifiers for the</term>
                                    <definition>
                                        <paragraph>node objects used to create the element.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>nodes (1x4 Array[obj])</title_reference>: Contains the properly ordered nodes objects</term>
                                    <definition>
                                        <paragraph>used to create the element.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>xs (1x4 np.array[float])</title_reference>: Array containing the x-coordinates of the</term>
                                    <definition>
                                        <paragraph>nodes used in the element</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>ys (1x4 np.array[float])</title_reference>: Array containing the y-coordinates of the</term>
                                    <definition>
                                        <paragraph>nodes used in the element</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>rho (float)</title_reference>: Density of the material used in the element.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>mass (float)</title_reference>: Mass per unit length (or thickness) of the element.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>U (12x1 np.array[float])</title_reference>: This column vector contains the CQUADXs</term>
                                    <definition>
                                        <paragraph>3 DOF (x-y-z) displacements in the local xsect CSYS due to cross-
section warping effects.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Eps (6x4 np.array[float])</title_reference>: A matrix containing the 3D strain state</term>
                                    <definition>
                                        <paragraph>within the CQUADX element.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Sig (6x4 np.array[float])</title_reference>: A matrix containing the 3D stress state</term>
                                    <definition>
                                        <paragraph>within the CQUADX element.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>x</title_reference>: Calculates the local xsect x-coordinate provided the desired master</term>
                                    <definition>
                                        <paragraph>coordinates eta and xi.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>y</title_reference>: Calculates the local xsect y-coordinate provided the desired master</term>
                                    <definition>
                                        <paragraph>coordinates eta and xi.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>J</title_reference>: Calculates the jacobian of the element provided the desired master</term>
                                    <definition>
                                        <paragraph>coordinates eta and xi.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>resetResults</title_reference>: Initializes the displacement (U), strain (Eps), and</term>
                                    <definition>
                                        <paragraph>stress (Sig) attributes of the element.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>getDeformed</title_reference>: Provided an analysis has been conducted, this method</term>
                                    <definition>
                                        <paragraph>returns 3 2x2 np.array[float] containing the element warped
displacements in the local xsect CSYS.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>getStressState</title_reference>: Provided an analysis has been conducted, this method</term>
                                    <definition>
                                        <paragraph>returns 3 2x2 np.array[float] containing the element stress at four
points. The 3D stress state is processed to return the Von-Mises
or Maximum Principal stress state.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>printSummary</title_reference>: Prints out a tabulated form of the element ID, as well</term>
                                    <definition>
                                        <paragraph>as the node ID's referenced by the element.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <index entries="['single',\ u'J()\ (AeroComBAT.Structures.CQUADX\ method)',\ u'AeroComBAT.Structures.CQUADX.J',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADX" first="False" fullname="CQUADX.J" ids="AeroComBAT.Structures.CQUADX.J" module="AeroComBAT.Structures" names="AeroComBAT.Structures.CQUADX.J"><desc_name>J</desc_name><desc_parameterlist><desc_parameter>eta</desc_parameter><desc_parameter>xi</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Calculates the jacobian at a point in the element.</paragraph>
                            <paragraph>This method calculates the jacobian at a local point within the element
provided the master coordinates eta and xi.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>eta (float)</title_reference>: The eta coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>xi (float)</title_reference>: The xi coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>Jmat (3x3 np.array[float])</title_reference>: The stress-resutlant transformation</term>
                                            <definition>
                                                <paragraph>array.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>Xi and eta can both vary between -1 and 1 respectively.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'__init__()\ (AeroComBAT.Structures.CQUADX\ method)',\ u'AeroComBAT.Structures.CQUADX.__init__',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADX" first="False" fullname="CQUADX.__init__" ids="AeroComBAT.Structures.CQUADX.__init__" module="AeroComBAT.Structures" names="AeroComBAT.Structures.CQUADX.__init__"><desc_name>__init__</desc_name><desc_parameterlist><desc_parameter>EID</desc_parameter><desc_parameter>nodes</desc_parameter><desc_parameter>MID</desc_parameter><desc_parameter>matLib</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Initializes the element.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>EID (int)</title_reference>: An integer identifier for the CQUADX element.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>nodes (1x4 Array[obj])</title_reference>: Contains the properly ordered nodes objects</term>
                                            <definition>
                                                <paragraph>used to create the element.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>MID (int)</title_reference>: An integer refrencing the material ID used for the</term>
                                            <definition>
                                                <paragraph>constitutive relations.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>matLib (obj)</title_reference>: A material library object containing a dictionary</term>
                                            <definition>
                                                <paragraph>with the material corresponding to the provided MID.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>xsect (bool)</title_reference>: A boolean to determine whether this quad element is</term>
                                            <definition>
                                                <paragraph>to be used for cross-sectional analysis. Defualt value is True.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>th (1x3 Array[float])</title_reference>: Array containing the Euler-angles expressing</term>
                                            <definition>
                                                <paragraph>how the element constitutive relations should be rotated from
the material fiber frame to the global CSYS. In degrees.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>The reference coordinate system for cross-sectional analysis is a</paragraph>
                            </note>
                            <paragraph>local coordinate system in which the x and y axes are planer with the
element, and the z-axis is perpendicular to the plane of the element.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'getDeformed()\ (AeroComBAT.Structures.CQUADX\ method)',\ u'AeroComBAT.Structures.CQUADX.getDeformed',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADX" first="False" fullname="CQUADX.getDeformed" ids="AeroComBAT.Structures.CQUADX.getDeformed" module="AeroComBAT.Structures" names="AeroComBAT.Structures.CQUADX.getDeformed"><desc_name>getDeformed</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Returns the warping displacement of the element.</paragraph>
                            <paragraph>Provided an analysis has been conducted, this method
returns 3 2x2 np.array[float] containing the element warped
displacements in the local xsect CSYS.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>warpScale (float)</title_reference>: A multiplicative scaling factor intended to</term>
                                            <definition>
                                                <paragraph>exagerate the warping displacement within the cross-section.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>xdef (2x2 np.array[float])</title_reference>: warped x-coordinates at the four corner</term>
                                            <definition>
                                                <paragraph>points.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>ydef (2x2 np.array[float])</title_reference>: warped y-coordinates at the four corner</term>
                                            <definition>
                                                <paragraph>points.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>zdef (2x2 np.array[float])</title_reference>: warped z-coordinates at the four corner</term>
                                            <definition>
                                                <paragraph>points.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'getStressState()\ (AeroComBAT.Structures.CQUADX\ method)',\ u'AeroComBAT.Structures.CQUADX.getStressState',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADX" first="False" fullname="CQUADX.getStressState" ids="AeroComBAT.Structures.CQUADX.getStressState" module="AeroComBAT.Structures" names="AeroComBAT.Structures.CQUADX.getStressState"><desc_name>getStressState</desc_name><desc_parameterlist><desc_parameter>crit='VonMis'</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Returns the stress state of the element.</paragraph>
                            <paragraph>Provided an analysis has been conducted, this method
returns a 2x2 np.array[float] containing the element the 3D stress
state at the four guass points by default.*</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>crit (str)</title_reference>: Determines what criteria is used to evaluate the 3D</term>
                                            <definition>
                                                <paragraph>stress state at the sample points within the element. By
default the Von Mises stress is returned. Currently supported
options include: Von Mises ('VonMis'), maximum principle stress
('MaxPrin'), the minimum principle stress ('MinPrin'), and the
local cross-section stress states 'sig_xx' where the subindeces can
go from 1-3. The keyword 'none' is also an option.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>sigData (2x2 np.array[float])</title_reference>: The stress state evaluated at four</term>
                                            <definition>
                                                <paragraph>points within the CQUADX element.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>The XSect method calcWarpEffects is what determines where strain</paragraph>
                            </note>
                            <paragraph>and stresses are sampled. By default it samples this information at the
Guass points where the stress/strain will be most accurate.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printSummary()\ (AeroComBAT.Structures.CQUADX\ method)',\ u'AeroComBAT.Structures.CQUADX.printSummary',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADX" first="False" fullname="CQUADX.printSummary" ids="AeroComBAT.Structures.CQUADX.printSummary" module="AeroComBAT.Structures" names="AeroComBAT.Structures.CQUADX.printSummary"><desc_name>printSummary</desc_name><desc_parameterlist><desc_parameter>nodes=False</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>A method for printing a summary of the CQUADX element.</paragraph>
                            <paragraph>Prints out a tabulated form of the element ID, as well as the node ID's
referenced by the element.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>summary (str)</title_reference>: Prints the tabulated EID, node IDs and material IDs</term>
                                            <definition>
                                                <paragraph>associated with the CQUADX element.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'resetResults()\ (AeroComBAT.Structures.CQUADX\ method)',\ u'AeroComBAT.Structures.CQUADX.resetResults',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADX" first="False" fullname="CQUADX.resetResults" ids="AeroComBAT.Structures.CQUADX.resetResults" module="AeroComBAT.Structures" names="AeroComBAT.Structures.CQUADX.resetResults"><desc_name>resetResults</desc_name><desc_parameterlist></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Resets stress, strain and warping displacement results.</paragraph>
                            <paragraph>Method is mainly intended to prevent results for one analysis or
sampling location in the matrix to effect the results in another.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'x()\ (AeroComBAT.Structures.CQUADX\ method)',\ u'AeroComBAT.Structures.CQUADX.x',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADX" first="False" fullname="CQUADX.x" ids="AeroComBAT.Structures.CQUADX.x" module="AeroComBAT.Structures" names="AeroComBAT.Structures.CQUADX.x"><desc_name>x</desc_name><desc_parameterlist><desc_parameter>eta</desc_parameter><desc_parameter>xi</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Calculate the x-coordinate within the element.</paragraph>
                            <paragraph>Calculates the local xsect x-coordinate provided the desired master
coordinates eta and xi.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>eta (float)</title_reference>: The eta coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>xi (float)</title_reference>: The xi coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>x (float)</title_reference>: The x-coordinate within the element.</paragraph>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>Xi and eta can both vary between -1 and 1 respectively.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'y()\ (AeroComBAT.Structures.CQUADX\ method)',\ u'AeroComBAT.Structures.CQUADX.y',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="CQUADX" first="False" fullname="CQUADX.y" ids="AeroComBAT.Structures.CQUADX.y" module="AeroComBAT.Structures" names="AeroComBAT.Structures.CQUADX.y"><desc_name>y</desc_name><desc_parameterlist><desc_parameter>eta</desc_parameter><desc_parameter>xi</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Calculate the y-coordinate within the element.</paragraph>
                            <paragraph>Calculates the local xsect y-coordinate provided the desired master
coordinates eta and xi.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>eta (float)</title_reference>: The eta coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>xi (float)</title_reference>: The xi coordinate in the master coordinate domain.*</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><problematic ids="id2" refid="id1">`</problematic>y (float)': The y-coordinate within the element.</paragraph>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>Xi and eta can both vary between -1 and 1 respectively.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="material-library" names="material\ library">
            <title>MATERIAL LIBRARY</title>
            <index entries="['single',\ u'MaterialLib\ (class\ in\ AeroComBAT.Structures)',\ u'AeroComBAT.Structures.MaterialLib',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="MaterialLib" ids="AeroComBAT.Structures.MaterialLib" module="AeroComBAT.Structures" names="AeroComBAT.Structures.MaterialLib"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Structures.</desc_addname><desc_name>MaterialLib</desc_name><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Creates a material library object.</paragraph>
                    <paragraph>This material library holds the materials to be used for any type of
analysis. Furthermore, it can be used to generate new material objects
to be automatically stored within it. See the Material class for suported
material types.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>matDict (dict)</title_reference>: A dictionary which stores material objects as the</term>
                                    <definition>
                                        <paragraph>values with the MIDs as the associated keys.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>addMat</title_reference>: Adds a material to the MaterialLib object dictionary.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>getMat</title_reference>: Returns a material object provided an MID</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>printSummary</title_reference>: Prints a summary of all of the materials held within the</term>
                                    <definition>
                                        <paragraph>matDict dictionary.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <index entries="['single',\ u'__init__()\ (AeroComBAT.Structures.MaterialLib\ method)',\ u'AeroComBAT.Structures.MaterialLib.__init__',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="MaterialLib" first="False" fullname="MaterialLib.__init__" ids="AeroComBAT.Structures.MaterialLib.__init__" module="AeroComBAT.Structures" names="AeroComBAT.Structures.MaterialLib.__init__"><desc_name>__init__</desc_name><desc_parameterlist></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Initialize MaterialLib object.</paragraph>
                            <paragraph>The initialization method is mainly used to initialize a dictionary
which houses material objects.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'addMat()\ (AeroComBAT.Structures.MaterialLib\ method)',\ u'AeroComBAT.Structures.MaterialLib.addMat',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="MaterialLib" first="False" fullname="MaterialLib.addMat" ids="AeroComBAT.Structures.MaterialLib.addMat" module="AeroComBAT.Structures" names="AeroComBAT.Structures.MaterialLib.addMat"><desc_name>addMat</desc_name><desc_parameterlist><desc_parameter>MID</desc_parameter><desc_parameter>mat_name</desc_parameter><desc_parameter>mat_type</desc_parameter><desc_parameter>mat_constants</desc_parameter><desc_parameter>mat_t</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Add a material to the MaterialLib object.</paragraph>
                            <paragraph>This is the primary method of the class, used to create new material
obects and then add them to the library for later use.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>MID (int)</title_reference>: Material ID.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>name (str)</title_reference>: Name of the material.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>matType (str)</title_reference>: The type of the material. Supported material types</term>
                                            <definition>
                                                <paragraph>are "iso", "trans_iso", and "ortho".</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>mat_constants (1xX Array[Float])</title_reference>: The requisite number of material</term>
                                            <definition>
                                                <paragraph>constants required for any structural analysis. Note, this
array includes the material density. For example, an isotropic
material needs 2 elastic material constants, so the total
length of mat_constants would be 3, 2 elastic constants and the
density.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>mat_t (float)</title_reference>: The thickness of 1-ply of the material</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>th (1x3 Array[float])</title_reference>: The angles about which the material can be</term>
                                            <definition>
                                                <paragraph>rotated when it is initialized. In degrees.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>overwrite (bool)</title_reference>: Input used in order to define whether the</term>
                                            <definition>
                                                <paragraph>material being added can overwrite another material already
held by the material library with the same MID.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'getMat()\ (AeroComBAT.Structures.MaterialLib\ method)',\ u'AeroComBAT.Structures.MaterialLib.getMat',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="MaterialLib" first="False" fullname="MaterialLib.getMat" ids="AeroComBAT.Structures.MaterialLib.getMat" module="AeroComBAT.Structures" names="AeroComBAT.Structures.MaterialLib.getMat"><desc_name>getMat</desc_name><desc_parameterlist><desc_parameter>MID</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Method that returns a material from the material libary</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>MID (int)</title_reference>: The ID of the material which is desired</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><problematic ids="id4" refid="id3">`</problematic>(obj): A material object associated with the key MID</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printSummary()\ (AeroComBAT.Structures.MaterialLib\ method)',\ u'AeroComBAT.Structures.MaterialLib.printSummary',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="MaterialLib" first="False" fullname="MaterialLib.printSummary" ids="AeroComBAT.Structures.MaterialLib.printSummary" module="AeroComBAT.Structures" names="AeroComBAT.Structures.MaterialLib.printSummary"><desc_name>printSummary</desc_name><desc_parameterlist></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Prints summary of all Materials in MaterialLib</paragraph>
                            <paragraph>A method used to print out tabulated summary of all of the materials
held within the material library object.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>(str): A tabulated summary of the materials.</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="ply" names="ply">
            <title>PLY</title>
            <index entries="['single',\ u'Ply\ (class\ in\ AeroComBAT.Structures)',\ u'AeroComBAT.Structures.Ply',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="Ply" ids="AeroComBAT.Structures.Ply" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Ply"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Structures.</desc_addname><desc_name>Ply</desc_name><desc_parameterlist><desc_parameter>Material</desc_parameter><desc_parameter>th</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Creates a CLT ply object.</paragraph>
                    <paragraph>A class inspired by CLT, this class can be used to generate laminates
to be used for CLT or cross-sectional analysis. It is likely that ply
objects won't be created individually and then assembeled into a lamiante.
More likely is that the plies will be generated within the laminate object.
It should also be noted that it is assumed that the materials used are
effectively at most transversely isotropic.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>E1 (float)</title_reference>: Stiffness in the fiber direction.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>E2 (float)</title_reference>: Stiffness transverse to the fiber direction.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>nu_12 (float)</title_reference>: In plane poisson ratio.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>G_12 (float)</title_reference>: In plane shear modulus.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>t (float)</title_reference>: Thickness of the ply.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Qbar (1x6 np.array[float])</title_reference>: The terms in the rotated, reduced stiffness</term>
                                    <definition>
                                        <paragraph>matrix. Ordering is as follows: [Q11,Q12,Q16,Q22,Q26,Q66]</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>MID (int)</title_reference>: An integer refrencing the material ID used for the</term>
                                    <definition>
                                        <paragraph>constitutive relations.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>th (float)</title_reference>: The angle about which the fibers are rotated in the plane</term>
                                    <definition>
                                        <paragraph>in degrees.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>genQ</title_reference>: Given the in-plane stiffnesses used by the material of the ply,</term>
                                    <definition>
                                        <paragraph>the method calculates the terms of ther reduced stiffness matrix.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>printSummary</title_reference>: This prints out a summary of the object, including</term>
                                    <definition>
                                        <paragraph>thickness, referenced MID and in plane angle orientation theta in
degrees.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <index entries="['single',\ u'__init__()\ (AeroComBAT.Structures.Ply\ method)',\ u'AeroComBAT.Structures.Ply.__init__',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Ply" first="False" fullname="Ply.__init__" ids="AeroComBAT.Structures.Ply.__init__" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Ply.__init__"><desc_name>__init__</desc_name><desc_parameterlist><desc_parameter>Material</desc_parameter><desc_parameter>th</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Initializes the ply.</paragraph>
                            <paragraph>This method initializes information about the ply such as in-plane
stiffness repsonse.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>Material (obj)</title_reference>: A material object, most likely coming from a</term>
                                            <definition>
                                                <paragraph>material library.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>th (float)</title_reference>: The angle about which the fibers are rotated in the</term>
                                            <definition>
                                                <paragraph>plane in degrees.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'genQ()\ (AeroComBAT.Structures.Ply\ method)',\ u'AeroComBAT.Structures.Ply.genQ',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Ply" first="False" fullname="Ply.genQ" ids="AeroComBAT.Structures.Ply.genQ" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Ply.genQ"><desc_name>genQ</desc_name><desc_parameterlist><desc_parameter>E1</desc_parameter><desc_parameter>E2</desc_parameter><desc_parameter>nu12</desc_parameter><desc_parameter>G12</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>A method for calculating the reduced compliance of the ply.</paragraph>
                            <paragraph>Intended primarily as a private method but left public, this method,
for those unfarmiliar with CLT, calculates the terms in the reduced stiffness
matrix given the in plane ply stiffnesses. It can be thus inferred that
this requires the assumption of plane stres. This method is primarily
used during the ply instantiation.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>E1 (float)</title_reference>: The fiber direction stiffness.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>E2 (float)</title_reference>: The stiffness transverse to the fibers.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>nu12 (float)</title_reference>: The in-plane poisson ratio.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>G12 (float)</title_reference>: The in-plane shear stiffness.</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>(1x4 np.array[float])</title_reference>: The terms used in the reduced stiffness</term>
                                            <definition>
                                                <paragraph>matrix. The ordering is: [Q11,Q12,Q22,Q66].</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printSummary()\ (AeroComBAT.Structures.Ply\ method)',\ u'AeroComBAT.Structures.Ply.printSummary',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Ply" first="False" fullname="Ply.printSummary" ids="AeroComBAT.Structures.Ply.printSummary" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Ply.printSummary"><desc_name>printSummary</desc_name><desc_parameterlist></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Prints a summary of the ply object.</paragraph>
                            <paragraph>A method for printing a summary of the ply properties, such as
the material ID, fiber orientation and ply thickness.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>(str)</title_reference>: Printed tabulated summary of the ply.</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="laminate" names="laminate">
            <title>LAMINATE</title>
            <index entries="['single',\ u'Laminate\ (class\ in\ AeroComBAT.Structures)',\ u'AeroComBAT.Structures.Laminate',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="Laminate" ids="AeroComBAT.Structures.Laminate" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Laminate"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Structures.</desc_addname><desc_name>Laminate</desc_name><desc_parameterlist><desc_parameter>n_i_tmp</desc_parameter><desc_parameter>m_i_tmp</desc_parameter><desc_parameter>matLib</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Creates a CLT laminate object.</paragraph>
                    <paragraph>This class has two main uses. It can either be used for CLT analysis, or it
can be used to build up a 2D mesh for a descretized cross-section.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>mesh (NxM np.array[int])</title_reference>: This 2D array holds NIDs and is used</term>
                                    <definition>
                                        <paragraph>to represent how nodes are organized in the 2D cross-section of
the laminate.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>xmesh (NxM np.array[int])</title_reference>: This 2D array holds the rigid x-coordinates</term>
                                    <definition>
                                        <paragraph>of the nodes within the 2D descretization of the laminate on the
local xsect CSYS.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>ymesh (NxM np.array[int])</title_reference>: This 2D array holds the rigid y-coordinates</term>
                                    <definition>
                                        <paragraph>of the nodes within the 2D descretization of the laminate on the
local xsect CSYS.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>zmesh (NxM np.array[int])</title_reference>: This 2D array holds the rigid z-coordinates</term>
                                    <definition>
                                        <paragraph>of the nodes within the 2D descretization of the laminate on the
local xsect CSYS.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>H (float)</title_reference>: The total laminate thickness.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>rho_A (float)</title_reference>: The laminate area density.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>plies (1xN array[obj])</title_reference>: Contains an array of ply objects used to</term>
                                    <definition>
                                        <paragraph>construct the laminate.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>t (1xN array[float])</title_reference>: An array containing all of the ply thicknesses.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>ABD (6x6 np.array[float])</title_reference>: The CLT 6x6 matrix relating in-plane strains</term>
                                    <definition>
                                        <paragraph>and curvatures to in-plane force and moment resultants.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>abd (6x6 np.array[float])</title_reference>: The CLT 6x6 matrix relating in-plane forces</term>
                                    <definition>
                                        <paragraph>and moments resultants to in-plane strains and curvatures.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>z (1xN array[float])</title_reference>: The z locations of laminate starting and ending</term>
                                    <definition>
                                        <paragraph>points. This system always starts at -H/2 and goes to H/2</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>equivMat (obj)</title_reference>: This is orthotropic material object which exhibits</term>
                                    <definition>
                                        <paragraph>similar in-plane stiffnesses.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>forceRes (1x6 np.array[float])</title_reference>: The applied or resulting force and</term>
                                    <definition>
                                        <paragraph>moment resultants generated during CLT analysis.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>globalStrain (1x6 np.array[float])</title_reference>:  The applied or resulting strain</term>
                                    <definition>
                                        <paragraph>and curvatures generated during CLT analysis.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>printSummary</title_reference>: This method prints out defining attributes of the</term>
                                    <definition>
                                        <paragraph>laminate, such as the ABD matrix and layup schedule.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <index entries="['single',\ u'__init__()\ (AeroComBAT.Structures.Laminate\ method)',\ u'AeroComBAT.Structures.Laminate.__init__',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Laminate" first="False" fullname="Laminate.__init__" ids="AeroComBAT.Structures.Laminate.__init__" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Laminate.__init__"><desc_name>__init__</desc_name><desc_parameterlist><desc_parameter>n_i_tmp</desc_parameter><desc_parameter>m_i_tmp</desc_parameter><desc_parameter>matLib</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Initializes the Laminate object</paragraph>
                            <paragraph>The way the laminate initialization works is you pass in two-three
arrays and a material library. The first array contains information
about how many plies you want to stack, the second array determines
what material should be used for those plies, and the third array
determines at what angle those plies lie. The class was developed this
way as a means to fascilitate laminate optimization by quickly changing
the number of plies at a given orientation and using a given material.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>n_i_tmp (1xN array[int])</title_reference>: An array containing the number of plies</term>
                                            <definition>
                                                <paragraph>using a material at a particular orientation such as:
(theta=0,theta=45...)</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>m_i_tmp (1xN array[int])</title_reference>: An array containing the material to be</term>
                                            <definition>
                                                <paragraph>used for the corresponding number of plies in the n_i_tmp array</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>matLib (obj)</title_reference>: The material library holding different material</term>
                                            <definition>
                                                <paragraph>objects.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>sym (bool)</title_reference>: Whether the laminate is symetric. (False by default)</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>th (1xN array[float])</title_reference>: An array containing the orientation at which</term>
                                            <definition>
                                                <paragraph>the fibers are positioned within the laminate.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>If you wanted to create a [0_2/45_2/90_2/-45_2]_s laminate of the
same material, you could call laminate as:</paragraph>
                                <paragraph>lam = Laminate([2,2,2,2],[1,1,1,1],matLib,sym=True)</paragraph>
                                <paragraph>Or:</paragraph>
                                <paragraph>lam = Laminate([2,2,2,2],[1,1,1,1],matLib,sym=True,th=[0,45,90,-45])</paragraph>
                                <paragraph>Both of these statements are equivalent. If no theta array is
provided and n_i_tmp is not equal to 4, then Laminate will default
your fibers to all be running in the 0 degree orientation.</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printSummary()\ (AeroComBAT.Structures.Laminate\ method)',\ u'AeroComBAT.Structures.Laminate.printSummary',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Laminate" first="False" fullname="Laminate.printSummary" ids="AeroComBAT.Structures.Laminate.printSummary" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Laminate.printSummary"><desc_name>printSummary</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Prints a summary of information about the laminate.</paragraph>
                            <paragraph>This method can print both the ABD matrix and ply information schedule
of the laminate.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>ABD (bool)</title_reference>: This optional argument asks whether the ABD matrix</term>
                                            <definition>
                                                <paragraph>should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>decimals (int)</title_reference>: Should the ABD matrix be printed, python should</term>
                                            <definition>
                                                <paragraph>print up to this many digits after the decimal point.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>plies (bool)</title_reference>: This optional argument asks whether the ply schedule</term>
                                            <definition>
                                                <paragraph>for the laminate should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="mesher" names="mesher">
            <title>MESHER</title>
            <index entries="['single',\ u'Mesher\ (class\ in\ AeroComBAT.Structures)',\ u'AeroComBAT.Structures.Mesher',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="Mesher" ids="AeroComBAT.Structures.Mesher" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Mesher"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Structures.</desc_addname><desc_name>Mesher</desc_name><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Meshes cross-section objects</paragraph>
                    <paragraph>This class is used to descritize cross-sections provided laminate objects.
Currently only two cross-sectional shapes are supported. The first is a
box beam using an airfoil outer mold line, and the second is a hollow tube
using as many laminates as desired. One of the main results is the
population of the nodeDict and elemDict attributes for the cross-section.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>None</paragraph>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>boxBeam</title_reference>: Taking several inputs including 4 laminate objects and meshes</term>
                                    <definition>
                                        <paragraph>a 2D box beam cross-section.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>laminate</title_reference>: Meshes the cross-section of a single laminate.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>cylindricalTube</title_reference>: Taking several inputs including n laminate objects and</term>
                                    <definition>
                                        <paragraph>meshes a 2D cylindrical tube cross-section.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>rectBoxBeam</title_reference>: Meshes a rectangular cross-section, but it is more</term>
                                    <definition>
                                        <paragraph>restrictive than boxBeam method. In this method, each of the four
laminates must have the same number of plies, each of which are the
same thickness.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <index entries="['single',\ u'boxBeam()\ (AeroComBAT.Structures.Mesher\ method)',\ u'AeroComBAT.Structures.Mesher.boxBeam',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesher" first="False" fullname="Mesher.boxBeam" ids="AeroComBAT.Structures.Mesher.boxBeam" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Mesher.boxBeam"><desc_name>boxBeam</desc_name><desc_parameterlist><desc_parameter>xsect</desc_parameter><desc_parameter>meshSize</desc_parameter><desc_parameter>x0</desc_parameter><desc_parameter>xf</desc_parameter><desc_parameter>matlib</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Meshes a box beam cross-section.</paragraph>
                            <paragraph>This meshing routine takes several parameters including a cross-section
object <title_reference>xsect</title_reference>. This cross-section object should also contain the
laminate objects used to construct it. There are no restrictions place
on these laminates. Furthermore the outer mold line of this cross-
section can take the form of any NACA 4-series airfoil. Finally, the
convention is that for the four laminates that make up the box-beam,
the the first ply in the laminate (which in CLT corresponds to the last
ply in the stack) is located on the outside of the box beam. This
convention can be seen below:</paragraph>
                            <image align="center" candidates="{'*': u'images/boxBeamGeom.png'}" uri="images/boxBeamGeom.png">
                            </image>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>xsect (obj)</title_reference>: The cross-section object to be meshed.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>meshSize (int)</title_reference>: The maximum aspect ratio an element can have</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>x0 (float)</title_reference>: The non-dimensional starting point of the cross-section</term>
                                            <definition>
                                                <paragraph>on the airfoil.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>xf (float)</title_reference>: The non-dimesnional ending point of the cross-section</term>
                                            <definition>
                                                <paragraph>on the airfoil.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>matlib (obj)</title_reference>: The material library object used to create CQUADX</term>
                                            <definition>
                                                <paragraph>elements.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'laminate()\ (AeroComBAT.Structures.Mesher\ method)',\ u'AeroComBAT.Structures.Mesher.laminate',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesher" first="False" fullname="Mesher.laminate" ids="AeroComBAT.Structures.Mesher.laminate" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Mesher.laminate"><desc_name>laminate</desc_name><desc_parameterlist><desc_parameter>xsect</desc_parameter><desc_parameter>meshSize</desc_parameter><desc_parameter>x0</desc_parameter><desc_parameter>xf</desc_parameter><desc_parameter>matlib</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Meshes laminate cross-section.</paragraph>
                            <paragraph>This method meshes a simple laminate cross-section. It is assumed that
the unit normal vector of the laminate points in the y-direction. This
method only requires one laminate, which can take any shape. The cross-
section geometry can be seen below:</paragraph>
                            <image align="center" candidates="{'*': u'images/laminateGeom.png'}" uri="images/laminateGeom.png">
                            </image>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>xsect (obj)</title_reference>: The cross-section object to be meshed.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>meshSize (int)</title_reference>: The maximum aspect ratio an element can have</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>x0 (float)</title_reference>: The non-dimensional starting point of the cross-section</term>
                                            <definition>
                                                <paragraph>on the airfoil.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>xf (float)</title_reference>: The non-dimesnional ending point of the cross-section</term>
                                            <definition>
                                                <paragraph>on the airfoil.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>matlib (obj)</title_reference>: The material library object used to create CQUADX</term>
                                            <definition>
                                                <paragraph>elements.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'rectBoxBeam()\ (AeroComBAT.Structures.Mesher\ method)',\ u'AeroComBAT.Structures.Mesher.rectBoxBeam',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesher" first="False" fullname="Mesher.rectBoxBeam" ids="AeroComBAT.Structures.Mesher.rectBoxBeam" module="AeroComBAT.Structures" names="AeroComBAT.Structures.Mesher.rectBoxBeam"><desc_name>rectBoxBeam</desc_name><desc_parameterlist><desc_parameter>xsect</desc_parameter><desc_parameter>meshSize</desc_parameter><desc_parameter>x0</desc_parameter><desc_parameter>xf</desc_parameter><desc_parameter>matlib</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Meshes a box beam cross-section.</paragraph>
                            <paragraph>This method meshes a similar cross-section as the boxBeam method. The
geometry of this cross-section can be seen below. The interfaces
between the laminates is different, and more restrictive. In this case
all of the laminates must have the same number of plies, which must
also all be the same thickness.</paragraph>
                            <image align="center" candidates="{'*': u'images/rectBoxGeom.png'}" uri="images/rectBoxGeom.png">
                            </image>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>xsect (obj)</title_reference>: The cross-section object to be meshed.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>meshSize (int)</title_reference>: The maximum aspect ratio an element can have</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>x0 (float)</title_reference>: The non-dimensional starting point of the cross-section</term>
                                            <definition>
                                                <paragraph>on the airfoil.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>xf (float)</title_reference>: The non-dimesnional ending point of the cross-section</term>
                                            <definition>
                                                <paragraph>on the airfoil.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>matlib (obj)</title_reference>: The material library object used to create CQUADX</term>
                                            <definition>
                                                <paragraph>elements.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="cross-section" names="cross-section">
            <title>CROSS-SECTION</title>
            <index entries="['single',\ u'XSect\ (class\ in\ AeroComBAT.Structures)',\ u'AeroComBAT.Structures.XSect',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="XSect" ids="AeroComBAT.Structures.XSect" module="AeroComBAT.Structures" names="AeroComBAT.Structures.XSect"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Structures.</desc_addname><desc_name>XSect</desc_name><desc_parameterlist><desc_parameter>XID</desc_parameter><desc_parameter>Airfoil</desc_parameter><desc_parameter>xdim</desc_parameter><desc_parameter>laminates</desc_parameter><desc_parameter>matlib</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Creates a beam cross-section object,</paragraph>
                    <paragraph>This cross-section can be made of multiple materials which can be in
general anisotropic. This is the main workhorse within the structures
library.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Color (touple)</title_reference>: A length 3 touple used to define the color of the</term>
                                    <definition>
                                        <paragraph>cross-section.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Airfoil (obj)</title_reference>: The airfoil object used to define the OML of the cross-</term>
                                    <definition>
                                        <paragraph>section.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>typeXSect (str)</title_reference>: Defines what type of cross-section is to be used.</term>
                                    <definition>
                                        <paragraph>Currently the only supported type is 'box'.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>normalVector (1x3 np.array[float])</title_reference>: Expresses the normal vector of the</term>
                                    <definition>
                                        <paragraph>cross-section.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>nodeDict (dict)</title_reference>: A dictionary of all nodes used to descretize the</term>
                                    <definition>
                                        <paragraph>cross-section surface. The keys are the NIDs and the values stored
are the Node objects.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>elemDict (dict)</title_reference>: A dictionary of all elements used to descretize the</term>
                                    <definition>
                                        <paragraph>cross-section surface. the keys are the EIDs and the values stored
are the element objects.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>X (ndx6 np.array[float])</title_reference>: A very large 2D array. This is one of the</term>
                                    <definition>
                                        <paragraph>results of the cross-sectional analysis. This array relays the
force and moment resultants applied to the cross-section to the
nodal warping displacements exhibited by the cross-section.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Y (6x6 np.array[float])</title_reference>: This array relays the force and moment</term>
                                    <definition>
                                        <paragraph>resultants applied to the cross-section to the rigid section
strains and curvatures exhibited by the cross-section.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>dXdz (ndx6 np.array[float])</title_reference>: A very large 2D array. This is one of the</term>
                                    <definition>
                                        <paragraph>results of the cross-sectional analysis. This array relays the
force and moment resultants applied to the cross-section to the
gradient of the nodal warping displacements exhibited by the
cross-section with respect to the beam axis.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>xt (float)</title_reference>: The x-coordinate of the tension center (point at which</term>
                                    <definition>
                                        <paragraph>tension and bending are decoupled)</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>yt (float)</title_reference>: The y-coordinate of the tension center (point at which</term>
                                    <definition>
                                        <paragraph>tension and bending are decoupled)</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>xs (float)</title_reference>: The x-coordinate of the shear center (point at which shear</term>
                                    <definition>
                                        <paragraph>and torsion are decoupled)</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>ys (float)</title_reference>: The y-coordinate of the shear center (point at which shear</term>
                                    <definition>
                                        <paragraph>and torsion are decoupled)</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>refAxis (3x1 np.array[float])</title_reference>: A column vector containing the reference</term>
                                    <definition>
                                        <paragraph>axis for the beam.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>bendAxes (2x3 np.array[float])</title_reference>: Contains two row vectors about which</term>
                                    <definition>
                                        <paragraph>bending from one axis is decoupled from bending about the other.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>F_raw (6x6 np.array[float])</title_reference>: The 6x6 compliance matrix that results</term>
                                    <definition>
                                        <paragraph>from cross-sectional analysis. This is the case where the reference
axis is at the origin.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>K_raw (6x6 np.array[float])</title_reference>: The 6x6 stiffness matrix that results</term>
                                    <definition>
                                        <paragraph>from cross-sectional analysis. This is the case where the reference
axis is at the origin.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>F (6x6 np.array[float])</title_reference>: The 6x6 compliance matrix for the cross-</term>
                                    <definition>
                                        <paragraph>section about the reference axis. The reference axis is by default
at the shear center.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>K (6x6 np.array[float])</title_reference>: The 6x6 stiffness matrix for the cross-</term>
                                    <definition>
                                        <paragraph>section about the reference axis. The reference axis is by default
at the shear center.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>T1 (3x6 np.array[float])</title_reference>: The transformation matrix that converts</term>
                                    <definition>
                                        <paragraph>strains and curvatures from the local xsect origin to the reference
axis.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>T2 (3x6 np.array[float])</title_reference>: The transformation matrix that converts</term>
                                    <definition>
                                        <paragraph>forces and moments from the local xsect origin to the reference
axis.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>x_m (1x3 np.array[float])</title_reference>: Center of mass of the cross-section about in</term>
                                    <definition>
                                        <paragraph>the local xsect CSYS</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>M (6x6 np.array[float])</title_reference>: This mass matrix relays linear and angular</term>
                                    <definition>
                                        <paragraph>velocities to linear and angular momentum of the cross-section.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>resetResults</title_reference>: This method resets all results (displacements, strains</term>
                                    <definition>
                                        <paragraph>and stresse) within the elements used by the cross-section object.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>calcWarpEffects</title_reference>: Given applied force and moment resultants, this method</term>
                                    <definition>
                                        <paragraph>calculates the warping displacement, 3D strains and 3D stresses
within the elements used by the cross-section.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>printSummary</title_reference>: This method is used to print characteristic attributes of</term>
                                    <definition>
                                        <paragraph>the object. This includes the elastic, shear and mass centers, as
well as the stiffness matrix and mass matrix.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>plotRigid</title_reference>: This method plots the rigid cross-section shape, typically</term>
                                    <definition>
                                        <paragraph>in conjunction with a full beam model.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>plotWarped</title_reference>: This method plots the warped cross-section including a</term>
                                    <definition>
                                        <paragraph>contour criteria, typically in conjuction with the results of the
displacement of a full beam model.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <index entries="['single',\ u'__init__()\ (AeroComBAT.Structures.XSect\ method)',\ u'AeroComBAT.Structures.XSect.__init__',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="XSect" first="False" fullname="XSect.__init__" ids="AeroComBAT.Structures.XSect.__init__" module="AeroComBAT.Structures" names="AeroComBAT.Structures.XSect.__init__"><desc_name>__init__</desc_name><desc_parameterlist><desc_parameter>XID</desc_parameter><desc_parameter>Airfoil</desc_parameter><desc_parameter>xdim</desc_parameter><desc_parameter>laminates</desc_parameter><desc_parameter>matlib</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Instantiates a cross-section object.</paragraph>
                            <paragraph>The constructor for the class is effectively responsible for creating
the 2D desretized mesh of the cross-section. It is important to note
that while meshing technically occurs in the constructor, the work is
handeled by another class altogether. While not
computationally heavily intensive in itself, it is responsible for
creating all of the framework for the cross-sectional analysis.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>XID (int)</title_reference>: The cross-section integer identifier.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>Airfoil (obj)</title_reference>: An airfoil object used to determine the OML shape of</term>
                                            <definition>
                                                <paragraph>the cross-section.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>xdim (1x2 array[float])</title_reference>: The non-dimensional starting and stoping</term>
                                            <definition>
                                                <paragraph>points of the cross-section. In other words, if you wanted to
have your cross-section start at the 1/4 chord and run to the
3/4 chord of your airfoil, xdim would look like xdim=[0.25,0.75]</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>laminates (1xN array[obj])</title_reference>: Laminate objects used to create the</term>
                                            <definition>
                                                <paragraph>descretized mesh surface. Do not repeat a laminate within this
array! It will referrence this object multiple times and not
mesh the cross-section properly then!</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>matlib (obj)</title_reference>: A material library</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>typeXSect (str)</title_reference>: The general shape the cross-section should take.</term>
                                            <definition>
                                                <paragraph>Note that currently only a box beam profile is supported.
More shapes and the ability to add stiffeners to the
cross-section will come in later updates.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>meshSize (int)</title_reference>: The maximum aspect ratio you would like your 2D</term>
                                            <definition>
                                                <paragraph>CQUADX elements to exhibit within the cross-section.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'calcWarpEffects()\ (AeroComBAT.Structures.XSect\ method)',\ u'AeroComBAT.Structures.XSect.calcWarpEffects',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="XSect" first="False" fullname="XSect.calcWarpEffects" ids="AeroComBAT.Structures.XSect.calcWarpEffects" module="AeroComBAT.Structures" names="AeroComBAT.Structures.XSect.calcWarpEffects"><desc_name>calcWarpEffects</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Calculates displacements, stresses, and strains for applied forces</paragraph>
                            <paragraph>The second most powerful method of the XSect class. After an analysis
is run, the FEM class stores force and moment resultants within the
beam element objects. From there, warping displacement, strain and
stress can be determined within the cross-section at any given location
within the beam using this method. This method will take a while though
as it has to calculate 4 displacements and 24 stresses and strains for
every element within the cross-section. Keep that in mind when you are
surveying your beam or wing for displacements, stresses and strains.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>force (6x1 np.array[float])</title_reference>: This is the internal force and moment</term>
                                            <definition>
                                                <paragraph>resultant experienced by the cross-section.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'plotRigid()\ (AeroComBAT.Structures.XSect\ method)',\ u'AeroComBAT.Structures.XSect.plotRigid',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="XSect" first="False" fullname="XSect.plotRigid" ids="AeroComBAT.Structures.XSect.plotRigid" module="AeroComBAT.Structures" names="AeroComBAT.Structures.XSect.plotRigid"><desc_name>plotRigid</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Plots the rigid cross-section along a beam.</paragraph>
                            <paragraph>This method is very useful for visually debugging a structural model.
It will plot out the rigid cross-section in 3D space with regards to
the reference axis.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>x (1x3 np.array[float])</title_reference>: The rigid location on your beam you are</term>
                                            <definition>
                                                <paragraph>trying to plot:</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>beam_axis (1x3 np.array[float])</title_reference>: The vector pointing in the</term>
                                            <definition>
                                                <paragraph>direction of your beam axis.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>figName (str)</title_reference>: The name of the figure.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>wireMesh (bool)</title_reference>: A boolean to determine of the wiremesh outline</term>
                                            <definition>
                                                <paragraph>should be plotted.*</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>(fig)</title_reference>: Plots the cross-section in a mayavi figure.</paragraph>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>Because of how the mayavi wireframe keyword works, it will</paragraph>
                            </note>
                            <paragraph>apear as though the cross-section is made of triangles as opposed to
quadrilateras. Fear not! They are made of quads, the wireframe is just
plotted as triangles.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'plotWarped()\ (AeroComBAT.Structures.XSect\ method)',\ u'AeroComBAT.Structures.XSect.plotWarped',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="XSect" first="False" fullname="XSect.plotWarped" ids="AeroComBAT.Structures.XSect.plotWarped" module="AeroComBAT.Structures" names="AeroComBAT.Structures.XSect.plotWarped"><desc_name>plotWarped</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Plots the warped cross-section along a beam.</paragraph>
                            <paragraph>Once an analysis has been completed, this method can be utilized in
order to plot the results anywhere along the beam.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>displScale (float)</title_reference>: The scale by which all rotations and</term>
                                            <definition>
                                                <paragraph>displacements will be mutliplied in order make it visually
easier to detect displacements.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>x (1x3 np.array[float])</title_reference>: The rigid location on your beam you are</term>
                                            <definition>
                                                <paragraph>trying to plot:</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>U (1x6 np.array[float])</title_reference>: The rigid body displacements and rotations</term>
                                            <definition>
                                                <paragraph>experienced by the cross-section.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>beam_axis (1x3 np.array[float])</title_reference>: The vector pointing in the</term>
                                            <definition>
                                                <paragraph>direction of your beam axis.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>contour (str)</title_reference>: Determines what value is to be plotted during as a</term>
                                            <definition>
                                                <paragraph>contour in the cross-section.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>figName (str)</title_reference>: The name of the figure.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>wireMesh (bool)</title_reference>: A boolean to determine of the wiremesh outline</term>
                                            <definition>
                                                <paragraph>should be plotted.*</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>contLim (1x2 array[float])</title_reference>: Describes the upper and lower bounds of</term>
                                            <definition>
                                                <paragraph>contour color scale.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>warpScale (float)</title_reference>: The scaling factor by which all warping</term>
                                            <definition>
                                                <paragraph>displacements in the cross-section will be multiplied.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>(fig)</title_reference>: Plots the cross-section in a mayavi figure.</paragraph>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>Because of how the mayavi wireframe keyword works, it will</paragraph>
                            </note>
                            <paragraph>apear as though the cross-section is made of triangles as opposed to
quadrilateras. Fear not! They are made of quads, the wireframe is just
plotted as triangles.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printSummary()\ (AeroComBAT.Structures.XSect\ method)',\ u'AeroComBAT.Structures.XSect.printSummary',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="XSect" first="False" fullname="XSect.printSummary" ids="AeroComBAT.Structures.XSect.printSummary" module="AeroComBAT.Structures" names="AeroComBAT.Structures.XSect.printSummary"><desc_name>printSummary</desc_name><desc_parameterlist><desc_parameter>refAxis=True</desc_parameter><desc_parameter>decimals=8</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Print characterisic information about the cross-section.</paragraph>
                            <paragraph>This method prints out characteristic information about the cross-
section objects. By default, the method will print out the location of
the reference axis, the shear, tension, and mass center. This method
if requested will also print the stiffness and mass matricies.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>refAxis (bool)</title_reference>: Boolean to determine if the stiffness matrix</term>
                                            <definition>
                                                <paragraph>printed should be about the reference axis (True) or about the
local xsect origin (False).</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>stiffMat (bool)</title_reference>: Boolean to determine if the stiffness matrix</term>
                                            <definition>
                                                <paragraph>should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>tensCntr (bool)</title_reference>: Boolean to determine if the location of the tension</term>
                                            <definition>
                                                <paragraph>center should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>shearCntr (bool)</title_reference>: Boolean to determine if the location of the shear</term>
                                            <definition>
                                                <paragraph>center should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>massCntr (bool)</title_reference>: Boolean to determine if the location of the mass</term>
                                            <definition>
                                                <paragraph>center should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>refAxisLoc (bool)</title_reference>: Boolean to determine if the location of the</term>
                                            <definition>
                                                <paragraph>reference axis should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>(str)</title_reference>: Prints out a string of information about the cross-section.</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'resetResults()\ (AeroComBAT.Structures.XSect\ method)',\ u'AeroComBAT.Structures.XSect.resetResults',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="XSect" first="False" fullname="XSect.resetResults" ids="AeroComBAT.Structures.XSect.resetResults" module="AeroComBAT.Structures" names="AeroComBAT.Structures.XSect.resetResults"><desc_name>resetResults</desc_name><desc_parameterlist></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Resets displacements, stress and strains within an xsect</paragraph>
                            <paragraph>This method clears all results (both warping, stress, and strain)
within the elements in the xsect object.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'xSectionAnalysis()\ (AeroComBAT.Structures.XSect\ method)',\ u'AeroComBAT.Structures.XSect.xSectionAnalysis',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="XSect" first="False" fullname="XSect.xSectionAnalysis" ids="AeroComBAT.Structures.XSect.xSectionAnalysis" module="AeroComBAT.Structures" names="AeroComBAT.Structures.XSect.xSectionAnalysis"><desc_name>xSectionAnalysis</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Analyzes an initialized corss-section.</paragraph>
                            <paragraph>This is the main workhorse of the class. This method assembles the
finite element model generated using the meshing class, and solve the
HIGH dimensional equilibrium equations associated with the cross-
section. In doing so, it generates the warping displacement, the
section strain, and the gradient of the warping displacement along the
beam axis as a function of force-moment resultants. With these three
things, the 3D strains-&gt;stresses can be recovered.</paragraph>
                            <paragraph>This method has been EXTENSIVELY tested and validated against
various sources (see theory guide for more info). Since this method
is so robust, the biggest limitation of the XSect class is what the
mesher is capable of meshing. Finally, keep in mind that due to the
high dimensionality of this problem, this method uses up a lot of
resources (primarily memory). If this method is taking too many
resources, choose a larger aspect ratio for your XSect initialization.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>ref_ax (str or 1x2 array[float])</title_reference>: Currently there are two supported</term>
                                            <definition>
                                                <paragraph>input types for this class. The first is the are string key-words.
These are 'shearCntr', 'massCntr', and 'origin'. Currently
'shearCntr' is the default value. Also suported is the ability to
pass a length 2 array containing the x and y coordinates of the
reference axis relative to the origin. This would take the form of:
ref_ax=[1.,3.] to put the reference axis at x,y = 1.,3.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="timoshenko-beam" names="timoshenko\ beam">
            <title>TIMOSHENKO BEAM</title>
            <index entries="['single',\ u'TBeam\ (class\ in\ AeroComBAT.Structures)',\ u'AeroComBAT.Structures.TBeam',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="TBeam" ids="AeroComBAT.Structures.TBeam" module="AeroComBAT.Structures" names="AeroComBAT.Structures.TBeam"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Structures.</desc_addname><desc_name>TBeam</desc_name><desc_parameterlist><desc_parameter>EID</desc_parameter><desc_parameter>x1</desc_parameter><desc_parameter>x2</desc_parameter><desc_parameter>xsect</desc_parameter><desc_parameter>SBID=0</desc_parameter><desc_parameter>nid1=0</desc_parameter><desc_parameter>nid2=1</desc_parameter><desc_parameter>chordVec=array([ 1.</desc_parameter><desc_parameter>0.</desc_parameter><desc_parameter>0.])</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Creates a Timoshenko beam finite element object.</paragraph>
                    <paragraph>The primary beam finite element used by AeroComBAT, this beam element is
similar to the Euler-Bernoulli beam finite element most are farmiliar with,
with the exception that it has the ability to experience shear deformation
in addition to just bending.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>type (str)</title_reference>:String describing the type of beam element being used.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>U1 (dict)</title_reference>: This dictionary contains the results of an analysis set. The</term>
                                    <definition>
                                        <paragraph>keys are the string names of the analysis and the values stored are
6x1 np.array[float] vectors containing the 3 displacements and
3 rotations at the first node.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>U2 (dict)</title_reference>: This dictionary contains the results of an analysis set. The</term>
                                    <definition>
                                        <paragraph>keys are the string names of the analysis and the values stored are
6x1 np.array[float] vectors containing the 3 displacements and
3 rotations at the second node.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Umode1 (dict)</title_reference>: This dictionary contains the results of a modal analysis</term>
                                    <definition>
                                        <paragraph>set. The keys are the string names of the analysis and the values
stored are 6xN np.array[float]. The columns of the array are the
displacements and rotations at the first node associated with the
particular mode.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Umode2 (dict)</title_reference>: This dictionary contains the results of a modal analysis</term>
                                    <definition>
                                        <paragraph>set. The keys are the string names of the analysis and the values
stored are 6xN np.array[float]. The columns of the array are the
displacements and rotations at the second node associated with the
particular mode.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>F1 (dict)</title_reference>: This dictionary contains the results of an analysis set. The</term>
                                    <definition>
                                        <paragraph>keys are the string names of the analysis and the values stored are
6x1 np.array[float] vectors containing the 3 internal forces and
3 moments at the first node.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>F2 (dict)</title_reference>: This dictionary contains the results of an analysis set. The</term>
                                    <definition>
                                        <paragraph>keys are the string names of the analysis and the values stored are
6x1 np.array[float] vectors containing the 3 internal forces and
3 moments at the second node.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Fmode1 (dict)</title_reference>: This dictionary contains the results of a modal analysis</term>
                                    <definition>
                                        <paragraph>set. The keys are the string names of the analysis and the values
stored are 6xN np.array[float]. The columns of the array are the
forces and moments at the first node associated with the
particular mode.*</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Fmode2 (dict)</title_reference>: This dictionary contains the results of a modal analysis</term>
                                    <definition>
                                        <paragraph>set. The keys are the string names of the analysis and the values
stored are 6xN np.array[float]. The columns of the array are the
forces and moments at the second node associated with the
particular mode.*</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>xsect (obj)</title_reference>: The cross-section object used to determine the beams</term>
                                    <definition>
                                        <paragraph>stiffnesses.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>EID (int)</title_reference>: The element ID of the beam.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>SBID (int)</title_reference>: The associated Superbeam ID the beam object belongs to.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>n1 (obj)</title_reference>: The first nodal object used by the beam.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>n2 (obj)</title_reference>: The second nodal object used by the beam.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>Fe (12x1 np.array[float])</title_reference>: The distributed force vector of the element</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>Ke (12x12 np.array[float])</title_reference>: The stiffness matrix of the beam.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Keg (12x12 np.array[float])</title_reference>: The geometric stiffness matrix of the</term>
                                    <definition>
                                        <paragraph>beam. Used for beam buckling calculations.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>Me (12x12 np.array[float])</title_reference>: The mass matrix of the beam.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>h (float)</title_reference>: The magnitude length of the beam element.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>xbar (float)</title_reference>: The unit vector pointing in the direction of the rigid</term>
                                    <definition>
                                        <paragraph>beam.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>T (12x12 np.array[float])</title_reference>:</paragraph>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>printSummary</title_reference>: This method prints out characteristic attributes of the</term>
                                    <definition>
                                        <paragraph>beam finite element.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>plotRigidBeam</title_reference>: Plots the the shape of the rigid beam element.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>plotDisplBeam</title_reference>: Plots the deformed shape of the beam element.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>printInternalForce</title_reference>: Prints the internal forces of the beam element for</term>
                                    <definition>
                                        <paragraph>a given analysis set</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <note>
                        <paragraph>The force and moments in the Fmode1 and Fmode2 could be completely</paragraph>
                    </note>
                    <paragraph>fictitious and be left as an artifact to fascilitate plotting of warped
cross-sections. DO NOT rely on this information being meaningful.</paragraph>
                    <index entries="['single',\ u'__init__()\ (AeroComBAT.Structures.TBeam\ method)',\ u'AeroComBAT.Structures.TBeam.__init__',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="TBeam" first="False" fullname="TBeam.__init__" ids="AeroComBAT.Structures.TBeam.__init__" module="AeroComBAT.Structures" names="AeroComBAT.Structures.TBeam.__init__"><desc_name>__init__</desc_name><desc_parameterlist><desc_parameter>EID</desc_parameter><desc_parameter>x1</desc_parameter><desc_parameter>x2</desc_parameter><desc_parameter>xsect</desc_parameter><desc_parameter>SBID=0</desc_parameter><desc_parameter>nid1=0</desc_parameter><desc_parameter>nid2=1</desc_parameter><desc_parameter>chordVec=array([ 1.</desc_parameter><desc_parameter>0.</desc_parameter><desc_parameter>0.])</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Instantiates a timoshenko beam element.</paragraph>
                            <paragraph>This method instatiates a finite element timoshenko beam element.
Currently the beam must be oriented along the global y-axis, however
full 3D orientation support for frames is in progress.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>x1 (1x3 np.array[float])</title_reference>: The 3D coordinates of the first beam</term>
                                            <definition>
                                                <paragraph>element node.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>x2 (1x3 np.array[float])</title_reference>: The 3D coordinates of the second beam</term>
                                            <definition>
                                                <paragraph>element node.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>xsect (obj)</title_reference>: The cross-section object used to determine stiffnes</term>
                                            <definition>
                                                <paragraph>and mass properties for the beam.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>EID (int)</title_reference>: The integer identifier for the beam.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>SBID (int)</title_reference>: The associated superbeam ID.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>nid1 (int)</title_reference>: The first node ID</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>nid2 (int)</title_reference>: The second node ID</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'plotDisplBeam()\ (AeroComBAT.Structures.TBeam\ method)',\ u'AeroComBAT.Structures.TBeam.plotDisplBeam',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="TBeam" first="False" fullname="TBeam.plotDisplBeam" ids="AeroComBAT.Structures.TBeam.plotDisplBeam" module="AeroComBAT.Structures" names="AeroComBAT.Structures.TBeam.plotDisplBeam"><desc_name>plotDisplBeam</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Plots the displaced beam in 3D space.</paragraph>
                            <paragraph>This method plots the deformed beam finite element in 3D space. It is
not typically called by the beam object but by a SuperBeam object
or even a WingSection object.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>environment (str)</title_reference>: Determines what environment is to be used to</term>
                                            <definition>
                                                <paragraph>plot the beam in 3D space. Currently only mayavi is supported.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>figName (str)</title_reference>: The name of the figure in which the beam will apear.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>clr (1x3 touple(float))</title_reference>: This touple contains three floats running</term>
                                            <definition>
                                                <paragraph>from 0 to 1 in order to generate a color mayavi can plot.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>displScale (float)</title_reference>: The scaling factor for the deformation</term>
                                            <definition>
                                                <paragraph>experienced by the beam.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>mode (int)</title_reference>: Determines what mode to plot. By default the mode is 0</term>
                                            <definition>
                                                <paragraph>implying a non-eigenvalue solution should be plotted.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>(fig)</title_reference>: The mayavi figure of the beam.</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'plotRigidBeam()\ (AeroComBAT.Structures.TBeam\ method)',\ u'AeroComBAT.Structures.TBeam.plotRigidBeam',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="TBeam" first="False" fullname="TBeam.plotRigidBeam" ids="AeroComBAT.Structures.TBeam.plotRigidBeam" module="AeroComBAT.Structures" names="AeroComBAT.Structures.TBeam.plotRigidBeam"><desc_name>plotRigidBeam</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Plots the rigid beam in 3D space.</paragraph>
                            <paragraph>This method plots the beam finite element in 3D space. It is not
typically called by the beam object but by a SuperBeam object or
even a WingSection object.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>environment (str)</title_reference>: Determines what environment is to be used to</term>
                                            <definition>
                                                <paragraph>plot the beam in 3D space. Currently only mayavi is supported.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>figName (str)</title_reference>: The name of the figure in which the beam will apear.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>clr (1x3 touple(float))</title_reference>: This touple contains three floats running</term>
                                            <definition>
                                                <paragraph>from 0 to 1 in order to generate a color mayavi can plot.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>(fig)</title_reference>: The mayavi figure of the beam.</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printInternalForce()\ (AeroComBAT.Structures.TBeam\ method)',\ u'AeroComBAT.Structures.TBeam.printInternalForce',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="TBeam" first="False" fullname="TBeam.printInternalForce" ids="AeroComBAT.Structures.TBeam.printInternalForce" module="AeroComBAT.Structures" names="AeroComBAT.Structures.TBeam.printInternalForce"><desc_name>printInternalForce</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Prints the internal forces and moments in the beam.</paragraph>
                            <paragraph>For a particular analysis set, this method prints out the force and
moment resultants at both nodes of the beam.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>analysis_name (str)</title_reference>: The analysis name for which the forces are</term>
                                            <definition>
                                                <paragraph>being surveyed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>(str)</title_reference>: This is a print out of the internal forces and moments</term>
                                            <definition>
                                                <paragraph>within the beam element.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printSummary()\ (AeroComBAT.Structures.TBeam\ method)',\ u'AeroComBAT.Structures.TBeam.printSummary',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="TBeam" first="False" fullname="TBeam.printSummary" ids="AeroComBAT.Structures.TBeam.printSummary" module="AeroComBAT.Structures" names="AeroComBAT.Structures.TBeam.printSummary"><desc_name>printSummary</desc_name><desc_parameterlist><desc_parameter>decimals=8</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Prints out characteristic information about the beam element.</paragraph>
                            <paragraph>This method by default prints out the EID, XID, SBID and the NIDs along
with the nodes associated coordinates. Upon request, it can also print
out the beam element stiffness, geometric stiffness, mass matricies and
distributed force vector.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>nodeCoord (bool)</title_reference>: A boolean to determine if the node coordinate</term>
                                            <definition>
                                                <paragraph>information should also be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>Ke (bool)</title_reference>: A boolean to determine if the element stiffness matrix</term>
                                            <definition>
                                                <paragraph>should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>Keg (bool)</title_reference>: A boolean to determine if the element gemoetric</term>
                                            <definition>
                                                <paragraph>stiffness matrix should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>Me (bool)</title_reference>: A boolean to determine if the element mass matrix</term>
                                            <definition>
                                                <paragraph>should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>Fe (bool)</title_reference>: A boolean to determine if the element distributed force</term>
                                            <definition>
                                                <paragraph>and moment vector should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>(str)</title_reference>: Printed summary of the requested attributes.</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="super-beam" names="super-beam">
            <title>SUPER-BEAM</title>
            <index entries="['single',\ u'SuperBeam\ (class\ in\ AeroComBAT.Structures)',\ u'AeroComBAT.Structures.SuperBeam',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="SuperBeam" ids="AeroComBAT.Structures.SuperBeam" module="AeroComBAT.Structures" names="AeroComBAT.Structures.SuperBeam"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Structures.</desc_addname><desc_name>SuperBeam</desc_name><desc_parameterlist><desc_parameter>SBID</desc_parameter><desc_parameter>x1</desc_parameter><desc_parameter>x2</desc_parameter><desc_parameter>xsect</desc_parameter><desc_parameter>noe</desc_parameter><desc_parameter>btype='Tbeam'</desc_parameter><desc_parameter>sNID=1</desc_parameter><desc_parameter>sEID=1</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Create a superbeam object.</paragraph>
                    <paragraph>The superbeam object is mainly to fascilitate creating a whole series of
beam objects along  the same line.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>type (str)</title_reference>: The object type, a 'SuperBeam'.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>btype (str)</title_reference>: The beam element type of the elements in the superbeam.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>SBID (int)</title_reference>: The integer identifier for the superbeam.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>sNID (int)</title_reference>: The starting NID of the superbeam.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>enid (int)</title_reference>: The ending NID of the superbeam.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>xsect (obj)</title_reference>: The cross-section object referenced by the beam elements</term>
                                    <definition>
                                        <paragraph>in the superbeam.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>noe (int)</title_reference>: Number of elements in the beam.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>NIDs2EIDs (dict)</title_reference>: Mapping of NIDs to beam EIDs within the superbeam</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>x1 (1x3 np.array[float])</title_reference>: The 3D coordinate of the first point on the</term>
                                    <definition>
                                        <paragraph>superbeam.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>x2 (1x3 np.array[float])</title_reference>: The 3D coordinate of the last point on the</term>
                                    <definition>
                                        <paragraph>superbeam.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>sEID (int)</title_reference>: The integer identifier for the first beam element in the</term>
                                    <definition>
                                        <paragraph>superbeam.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>elems (dict)</title_reference>: A dictionary of all beam elements within the superbeam.</term>
                                    <definition>
                                        <paragraph>The keys are the EIDs and the values are the corresponding beam
elements.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>xbar (1x3 np.array[float])</title_reference>: The vector pointing along the axis of the</term>
                                    <definition>
                                        <paragraph>superbeam.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>getBeamCoord</title_reference>: Returns the 3D coordinate of a point along the superbeam.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>printInternalForce</title_reference>: Prints all internal forces and moments at every</term>
                                    <definition>
                                        <paragraph>node in the superbeam.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>writeDisplacements</title_reference>: Writes all displacements and rotations in the</term>
                                    <definition>
                                        <paragraph>superbeam to a .csv</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>getEIDatx</title_reference>: Provided a non-dimensional point along the superbeam, this</term>
                                    <definition>
                                        <paragraph>method returns the local element EID and the non-dimensional
coordinate within that element.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>printSummary</title_reference>: Prints all of the elements and node IDs within the beam</term>
                                    <definition>
                                        <paragraph>as well as the coordinates of those nodes.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <index entries="['single',\ u'__init__()\ (AeroComBAT.Structures.SuperBeam\ method)',\ u'AeroComBAT.Structures.SuperBeam.__init__',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="SuperBeam" first="False" fullname="SuperBeam.__init__" ids="AeroComBAT.Structures.SuperBeam.__init__" module="AeroComBAT.Structures" names="AeroComBAT.Structures.SuperBeam.__init__"><desc_name>__init__</desc_name><desc_parameterlist><desc_parameter>SBID</desc_parameter><desc_parameter>x1</desc_parameter><desc_parameter>x2</desc_parameter><desc_parameter>xsect</desc_parameter><desc_parameter>noe</desc_parameter><desc_parameter>btype='Tbeam'</desc_parameter><desc_parameter>sNID=1</desc_parameter><desc_parameter>sEID=1</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Creates a superelement object.</paragraph>
                            <paragraph>This method instantiates a superelement. What it effectively does is
mesh a line provided the starting and ending points along that line.
Keep in mind that for now, only beams running parallel to the z-axis
are supported.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>x1 (1x3 np.array[float])</title_reference>: The starting coordinate of the beam.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>x2 (1x3 np.array[float])</title_reference>: The ending coordinate of the beam.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>xsect (obj)</title_reference>: The cross-section used throught the superbeam.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>noe (int)</title_reference>: The number of elements along the beam.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>SBID (int)</title_reference>: The integer identifier for the superbeam.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>btype (str)</title_reference>: The beam type to be meshed. Currently only Tbeam types</term>
                                            <definition>
                                                <paragraph>are supported.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>sNID (int)</title_reference>: The starting NID for the superbeam.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>sEID (int)</title_reference>: The starting EID for the superbeam.</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>None</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'getBeamCoord()\ (AeroComBAT.Structures.SuperBeam\ method)',\ u'AeroComBAT.Structures.SuperBeam.getBeamCoord',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="SuperBeam" first="False" fullname="SuperBeam.getBeamCoord" ids="AeroComBAT.Structures.SuperBeam.getBeamCoord" module="AeroComBAT.Structures" names="AeroComBAT.Structures.SuperBeam.getBeamCoord"><desc_name>getBeamCoord</desc_name><desc_parameterlist><desc_parameter>x_nd</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Determine the global coordinate along superbeam.</paragraph>
                            <paragraph>Provided the non-dimensional coordinate along the beam, this method
returns the global coordinate at that point.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>x_nd (float)</title_reference>: The non-dimensional coordinate along the beam. Note</term>
                                            <definition>
                                                <paragraph>that x_nd must be between zero and one.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>(1x3 np.array[float])</title_reference>: The global coordinate corresponding to x_nd</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'getEIDatx()\ (AeroComBAT.Structures.SuperBeam\ method)',\ u'AeroComBAT.Structures.SuperBeam.getEIDatx',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="SuperBeam" first="False" fullname="SuperBeam.getEIDatx" ids="AeroComBAT.Structures.SuperBeam.getEIDatx" module="AeroComBAT.Structures" names="AeroComBAT.Structures.SuperBeam.getEIDatx"><desc_name>getEIDatx</desc_name><desc_parameterlist><desc_parameter>x</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Returns the beam EID at a non-dimensional x-location in the superbeam.</paragraph>
                            <paragraph>Provided the non-dimensional coordinate along the beam, this method
returns the global beam element EID, as well as the local non-
dimensional coordinate within the specific beam element.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>x (float)</title_reference>: The non-dimensional coordinate within the super-beam</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>EID (int)</title_reference>: The EID of the element containing the non-dimensional</term>
                                            <definition>
                                                <paragraph>coordinate provided.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>local_x_nd (float)</title_reference>: The non-dimensional coordinate within the beam</term>
                                            <definition>
                                                <paragraph>element associated with the provided non-dimensional coordinate
within the beam.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printInternalForce()\ (AeroComBAT.Structures.SuperBeam\ method)',\ u'AeroComBAT.Structures.SuperBeam.printInternalForce',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="SuperBeam" first="False" fullname="SuperBeam.printInternalForce" ids="AeroComBAT.Structures.SuperBeam.printInternalForce" module="AeroComBAT.Structures" names="AeroComBAT.Structures.SuperBeam.printInternalForce"><desc_name>printInternalForce</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Prints the internal forces and moments in the superbeam.</paragraph>
                            <paragraph>For every node within the superbeam, this method will print out the
internal forces and moments at those nodes.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>analysis_name (str)</title_reference>: The name of the analysis for which the forces</term>
                                            <definition>
                                                <paragraph>and moments are being surveyed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>(str)</title_reference>: Printed output expressing all forces and moments.</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'printSummary()\ (AeroComBAT.Structures.SuperBeam\ method)',\ u'AeroComBAT.Structures.SuperBeam.printSummary',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="SuperBeam" first="False" fullname="SuperBeam.printSummary" ids="AeroComBAT.Structures.SuperBeam.printSummary" module="AeroComBAT.Structures" names="AeroComBAT.Structures.SuperBeam.printSummary"><desc_name>printSummary</desc_name><desc_parameterlist><desc_parameter>decimals=8</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Prints out characteristic information about the super beam.</paragraph>
                            <paragraph>This method by default prints out the EID, XID, SBID and the NIDs along
with the nodes associated coordinates. Upon request, it can also print
out the beam element stiffness, geometric stiffness, mass matricies and
distributed force vector.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>nodeCoord (bool)</title_reference>: A boolean to determine if the node coordinate</term>
                                            <definition>
                                                <paragraph>information should also be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>Ke (bool)</title_reference>: A boolean to determine if the element stiffness matrix</term>
                                            <definition>
                                                <paragraph>should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>Keg (bool)</title_reference>: A boolean to determine if the element gemoetric</term>
                                            <definition>
                                                <paragraph>stiffness matrix should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>Me (bool)</title_reference>: A boolean to determine if the element mass matrix</term>
                                            <definition>
                                                <paragraph>should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>Fe (bool)</title_reference>: A boolean to determine if the element distributed force</term>
                                            <definition>
                                                <paragraph>and moment vector should be printed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>(str)</title_reference>: Printed summary of the requested attributes.</paragraph>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'writeDisplacements()\ (AeroComBAT.Structures.SuperBeam\ method)',\ u'AeroComBAT.Structures.SuperBeam.writeDisplacements',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="SuperBeam" first="False" fullname="SuperBeam.writeDisplacements" ids="AeroComBAT.Structures.SuperBeam.writeDisplacements" module="AeroComBAT.Structures" names="AeroComBAT.Structures.SuperBeam.writeDisplacements"><desc_name>writeDisplacements</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Write internal displacements and rotations to file.</paragraph>
                            <paragraph>For every node within the superbeam, this method will tabulate all of
the displacements and rotations and then write them to a file.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>fileName (str)</title_reference>: The name of the file where the data will be written.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>analysis_name (str)</title_reference>: The name of the analysis for which the</term>
                                            <definition>
                                                <paragraph>displacements and rotations are being surveyed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>fileName (file)</title_reference>: This method doesn't actually return a file, rather</term>
                                            <definition>
                                                <paragraph>it writes the data to a file named "fileName" and saves it to the
working directory.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'writeForcesMoments()\ (AeroComBAT.Structures.SuperBeam\ method)',\ u'AeroComBAT.Structures.SuperBeam.writeForcesMoments',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="SuperBeam" first="False" fullname="SuperBeam.writeForcesMoments" ids="AeroComBAT.Structures.SuperBeam.writeForcesMoments" module="AeroComBAT.Structures" names="AeroComBAT.Structures.SuperBeam.writeForcesMoments"><desc_name>writeForcesMoments</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Write internal force and moments to file.</paragraph>
                            <paragraph>For every node within the superbeam, this method will tabulate all of
the forces and moments and then write them to a file.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>fileName (str)</title_reference>: The name of the file where the data will be written.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>analysis_name (str)</title_reference>: The name of the analysis for which the</term>
                                            <definition>
                                                <paragraph>forces and moments are being surveyed.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>fileName (file)</title_reference>: This method doesn't actually return a file, rather</term>
                                            <definition>
                                                <paragraph>it writes the data to a file named "fileName" and saves it to the
working directory.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="wing-section" names="wing\ section">
            <title>WING SECTION</title>
            <index entries="['single',\ u'WingSection\ (class\ in\ AeroComBAT.Structures)',\ u'AeroComBAT.Structures.WingSection',\ '']"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="WingSection" ids="AeroComBAT.Structures.WingSection" module="AeroComBAT.Structures" names="AeroComBAT.Structures.WingSection"><desc_annotation>class </desc_annotation><desc_addname>AeroComBAT.Structures.</desc_addname><desc_name>WingSection</desc_name><desc_parameterlist><desc_parameter>x1</desc_parameter><desc_parameter>x2</desc_parameter><desc_parameter>chord</desc_parameter><desc_parameter>name</desc_parameter><desc_parameter>x0_spar</desc_parameter><desc_parameter>xf_spar</desc_parameter><desc_parameter>laminates</desc_parameter><desc_parameter>matLib</desc_parameter><desc_parameter>noe</desc_parameter><desc_parameter>SSBID=0</desc_parameter><desc_parameter>SNID=0</desc_parameter><desc_parameter>SEID=0</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                <desc_content>
                    <paragraph>Creates a wing section object.</paragraph>
                    <paragraph>This class instantiates a wing section object which is intended to
represent the section of a wing enclosed by two ribs. This allows primarily
for two different things: it allows the user to vary the cross-section
design of the wing by enabling different designs in each wing section, as
well as enabling the user to estimate the static stability of the laminates
that make up the wing-section design.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Attributes</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Airfoils (Array[obj])</title_reference>: This array contains all of the airfoils used</term>
                                    <definition>
                                        <paragraph>over the wing section. This attribute exists primarily to fascilitate
the meshing process and is subject to change.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>XSects (Array[obj])</title_reference>: This array contains all of the cross-section</term>
                                    <definition>
                                        <paragraph>objects used in the wing section. If the cross-section is constant
along the length of the wing section, this array length is 1.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>SuperBeams (Array[obj])</title_reference>: This array contains all of the superbeam</term>
                                    <definition>
                                        <paragraph>objects used in the wing section. If the cross-section is constant
along the length of the wing section, this array length is 1.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>xdim (1x2 Array[float])</title_reference>: This array contains the non-dimensional</term>
                                    <definition>
                                        <paragraph>starting and ending points of the wing section spar. They are
non-dimensionalized by the chord length.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>Laminates (Array[obj])</title_reference>: This array contains the laminate objects used</term>
                                    <definition>
                                        <paragraph>by the cross-sections in the wing section.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>x1 (1x3 np.array[float])</title_reference>: The starting coordinate of the wing section.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>x2 (1x3 np.array[float])</title_reference>: The ending coordinate of the wing section.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><title_reference>XIDs (Array[int])</title_reference>: This array containts the integer cross-section IDs</paragraph>
                        </list_item>
                    </bullet_list>
                    <field_list>
                        <field>
                            <field_name>Methods</field_name>
                            <field_body>
                            </field_body>
                        </field>
                    </field_list>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph><title_reference>plotRigid</title_reference>: This method plots the rigid wing section in 3D space.</paragraph>
                        </list_item>
                        <list_item>
                            <definition_list>
                                <definition_list_item>
                                    <term><title_reference>plotDispl</title_reference>: Provided an analysis name, this method will deformed state</term>
                                    <definition>
                                        <paragraph>of the wing section. It is also capable of plotting cross-section
criteria, such as displacement, stress, strain, or failure criteria.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </list_item>
                    </bullet_list>
                    <warning>
                        <paragraph>While it is possible to use multiple cross-section within the
wing section, this capability is only to be utilized for tapering cross
sections, not changing the cross-section type or design (such as by
changing the laminates used to make the cross-sections). Doing so would
invalidate the ritz method buckling solutions applied to the laminate
objects.</paragraph>
                    </warning>
                    <index entries="['single',\ u'__init__()\ (AeroComBAT.Structures.WingSection\ method)',\ u'AeroComBAT.Structures.WingSection.__init__',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="WingSection" first="False" fullname="WingSection.__init__" ids="AeroComBAT.Structures.WingSection.__init__" module="AeroComBAT.Structures" names="AeroComBAT.Structures.WingSection.__init__"><desc_name>__init__</desc_name><desc_parameterlist><desc_parameter>x1</desc_parameter><desc_parameter>x2</desc_parameter><desc_parameter>chord</desc_parameter><desc_parameter>name</desc_parameter><desc_parameter>x0_spar</desc_parameter><desc_parameter>xf_spar</desc_parameter><desc_parameter>laminates</desc_parameter><desc_parameter>matLib</desc_parameter><desc_parameter>noe</desc_parameter><desc_parameter>SSBID=0</desc_parameter><desc_parameter>SNID=0</desc_parameter><desc_parameter>SEID=0</desc_parameter><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Creates a wing section object</paragraph>
                            <paragraph>This wing section object is in some way an organizational object. It
holds a collection of superbeam objects which in general could all use
different cross-sections. One could for example use several super-beams
in order to simlate a taper within a wing section descretely. These
objects will also be used in order to determine the buckling span of
the laminate objects held within the cross-section.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>x1 (1x3 np.array[float])</title_reference>: The starting coordinate of the wing</term>
                                            <definition>
                                                <paragraph>section.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>x2 (1x3 np.array[float])</title_reference>: The ending coordinate of the wing</term>
                                            <definition>
                                                <paragraph>section.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>chord (func)</title_reference>: A function that returns the chord length along a wing</term>
                                            <definition>
                                                <paragraph>provided the scalar length from the wing origin to the desired
point.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>name (str)</title_reference>: The name of the airfoil to be used to mesh the</term>
                                            <definition>
                                                <paragraph>cross-section. This is subject to change since the meshing process
is only a placeholder.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>x0_spar (float)</title_reference>: The non-dimensional starting location of the cross</term>
                                            <definition>
                                                <paragraph>section. This value is non-dimensionalized by the local chord
length.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>xf_spar (float)</title_reference>: The non-dimensional ending location of the cross</term>
                                            <definition>
                                                <paragraph>section. This value is non-dimensionalized by the local chord
length.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>laminates (Array[obj])</title_reference>: This array contains the laminate objects to</term>
                                            <definition>
                                                <paragraph>be used in order to mesh the cross-section.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>matLib (obj)</title_reference>: This material library object contains all of the</term>
                                            <definition>
                                                <paragraph>materials to be used in meshing the cross-sections used by the
wing section.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>noe (float)</title_reference>: The number of beam elements to be used in the wing per</term>
                                            <definition>
                                                <paragraph>unit length.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>SSBID (int)</title_reference>: The starting superbeam ID in the wing section.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>SNID (int)</title_reference>: The starting node ID in the wing section.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>SEID (int)</title_reference>: The starting element ID in the wing section.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><title_reference>SXID (int)</title_reference>: The starting cross-section ID in the wing section.</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>numSupBeams (int)</title_reference>: The number of different superbeams to be used</term>
                                            <definition>
                                                <paragraph>in the wing section.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>typeXSect (str)</title_reference>: The type of cross-section used by the wing</term>
                                            <definition>
                                                <paragraph>section.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>meshSize (int)</title_reference>: The maximum aspect ratio an element can have within</term>
                                            <definition>
                                                <paragraph>the cross-sections used by the wing sections.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>ref_ax (str)</title_reference>: The reference axis used by the cross-section. This is</term>
                                            <definition>
                                                <paragraph>axis about which the loads will be applied on the wing section.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <note>
                                <paragraph>The chord function could take the shape of: 
chord = lambda y: (ctip-croot)*y/b_s+croot</paragraph>
                            </note>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'plotDispl()\ (AeroComBAT.Structures.WingSection\ method)',\ u'AeroComBAT.Structures.WingSection.plotDispl',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="WingSection" first="False" fullname="WingSection.plotDispl" ids="AeroComBAT.Structures.WingSection.plotDispl" module="AeroComBAT.Structures" names="AeroComBAT.Structures.WingSection.plotDispl"><desc_name>plotDispl</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Plots the deformed wing section object in 3D space.</paragraph>
                            <paragraph>Provided an analysis name, this method will plot the results from the
corresponding analysis including beam/cross-section deformation, and
stress, strain, or failure criteria within the sampled cross-sections.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>figName (str)</title_reference>: The name of the plot to be generated. If one is not</term>
                                            <definition>
                                                <paragraph>provided a semi-random name will be generated.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>environment (str)</title_reference>: The name of the environment to be used when</term>
                                            <definition>
                                                <paragraph>plotting. Currently only the 'mayavi' environment is supported.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>clr (1x3 tuple(int))</title_reference>: This tuple represents the RGB values that the</term>
                                            <definition>
                                                <paragraph>beam reference axis will be colored with.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>numXSects (int)</title_reference>: This is the number of cross-sections that will be</term>
                                            <definition>
                                                <paragraph>plotted and evenly distributed throughout the beam.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>contour (str)</title_reference>: The contour to be plotted on the sampled cross</term>
                                            <definition>
                                                <paragraph>sections.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>contLim (1x2 Array[float])</title_reference>: The lower and upper limits for the</term>
                                            <definition>
                                                <paragraph>contour color plot.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>warpScale (float)</title_reference>: The visual multiplication factor to be applied</term>
                                            <definition>
                                                <paragraph>to the cross-sectional warping displacement.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>displScale (float)</title_reference>: The visual multiplication factor to be applied</term>
                                            <definition>
                                                <paragraph>to the beam displacements and rotations.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>analysis_name (str)</title_reference>: The analysis name corresponding to the results</term>
                                            <definition>
                                                <paragraph>to pe visualized.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>mode (int)</title_reference>: For modal analysis, this corresponds to the mode-shape</term>
                                            <definition>
                                                <paragraph>which is desired to be plotted.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>(figure)</title_reference>: This method returns a 3D plot of the rigid wing section.</paragraph>
                                </list_item>
                            </bullet_list>
                            <warning>
                                <paragraph>In order to limit the size of data stored in memory, the
local cross-sectional data is not stored. As a result, for every
additional cross-section that is plotted, the time required to plot
will increase substantially.</paragraph>
                            </warning>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'plotRigid()\ (AeroComBAT.Structures.WingSection\ method)',\ u'AeroComBAT.Structures.WingSection.plotRigid',\ '']"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="WingSection" first="False" fullname="WingSection.plotRigid" ids="AeroComBAT.Structures.WingSection.plotRigid" module="AeroComBAT.Structures" names="AeroComBAT.Structures.WingSection.plotRigid"><desc_name>plotRigid</desc_name><desc_parameterlist><desc_parameter>**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                        <desc_content>
                            <paragraph>Plots the rigid wing section object in 3D space.</paragraph>
                            <paragraph>This method is exceptionally helpful when building up a model and
debugging it.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Args</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>figName (str)</title_reference>: The name of the plot to be generated. If one is not</term>
                                            <definition>
                                                <paragraph>provided a semi-random name will be generated.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>environment (str)</title_reference>: The name of the environment to be used when</term>
                                            <definition>
                                                <paragraph>plotting. Currently only the 'mayavi' environment is supported.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>clr (1x3 tuple(int))</title_reference>: This tuple represents the RGB values that the</term>
                                            <definition>
                                                <paragraph>beam reference axis will be colored with.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term><title_reference>numXSects (int)</title_reference>: This is the number of cross-sections that will be</term>
                                            <definition>
                                                <paragraph>plotted and evenly distributed throughout the beam.</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                    </field_body>
                                </field>
                            </field_list>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph><title_reference>(figure)</title_reference>: This method returns a 3D plot of the rigid wing section.</paragraph>
                                </list_item>
                            </bullet_list>
                            <warning>
                                <paragraph>In order to limit the size of data stored in memory, the
local cross-sectional data is not stored. As a result, for every
additional cross-section that is plotted, the time required to plot
will increase substantially.</paragraph>
                            </warning>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
    </section>
</document>
